import { ToastType } from './toast-type.enum';
import { Component, input } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { trigger, style, animate, transition } from '@angular/animations';
import { ToasterPosition } from './toaster-position.enum';
import * as i0 from "@angular/core";
import * as i1 from "./ng-toast.service";
import * as i2 from "@angular/common";
import * as i3 from "./toast-icon.directive";
export class NgToastComponent {
    constructor(toastService) {
        this.toastService = toastService;
        this.position = input(ToasterPosition.BOTTOM_RIGHT);
        this.width = input(350);
        this.ToastType = ToastType;
        this._toasterSubject$ = new Subject();
        this.messages = [];
    }
    ngOnInit() {
        this.toastService.onToastMessage()
            .pipe(takeUntil(this._toasterSubject$))
            .subscribe(message => this._handleToastMessage(message));
    }
    _handleToastMessage(message) {
        if (this._isToasterPositionTop()) {
            this.messages.unshift(message);
        }
        else {
            this.messages.push(message);
        }
        setTimeout(() => this._removeMessage(message), message.duration);
    }
    _isToasterPositionTop() {
        return this.position() === ToasterPosition.TOP_LEFT ||
            this.position() === ToasterPosition.TOP_CENTER ||
            this.position() === ToasterPosition.TOP_RIGHT;
    }
    _removeMessage(message) {
        const index = this.messages.findIndex(e => e.id === message.id);
        if (index > -1) {
            this.messages.splice(index, 1);
        }
    }
    remove(message) {
        this._removeMessage(message);
    }
    ngOnDestroy() {
        this._toasterSubject$.next();
        this._toasterSubject$.complete();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.1", ngImport: i0, type: NgToastComponent, deps: [{ token: i1.NgToastService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.0.1", type: NgToastComponent, selector: "ng-toast", inputs: { position: { classPropertyName: "position", publicName: "position", isSignal: true, isRequired: false, transformFunction: null }, width: { classPropertyName: "width", publicName: "width", isSignal: true, isRequired: false, transformFunction: null } }, ngImport: i0, template: "<div style.min-width=\"{{width()}}px\" style.max-width=\"{{width()}}px\" class=\"toaster\" [ngClass]=\"position()\">\n\n  <div class=\"toast-message\" *ngFor=\"let message of messages\" [ngClass]=\"message.type\" [@showHide]>\n    <div class=\"flex-start-center gap-3\">\n      <div [ngClass]=\"message.type\" class=\"toast-icon\">\n        <div [toastIcon]=\"message.type\" class=\"toast-icon\"></div>\n      </div>\n      <div class=\"flex-col\">\n        @if (message.title && message.title !== '') {\n          <span class=\"msg-title\">{{message.title}}</span>\n        }\n        <span style.max-width=\"{{width() - 30}}px\" class=\"msg-summary\">{{message.message}}</span>\n      </div>\n    </div>\n    <button (click)=\"remove(message)\" [ngClass]=\"message.type\" class=\"cross-icon\">\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 14 14\" fill=\"none\" class=\"p-icon p-toast-icon-close-icon\"\n        aria-hidden=\"true\">\n        <path\n          d=\"M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z\"\n          fill=\"currentColor\"></path>\n      </svg></button>\n  </div>\n</div>\n", styles: [".toaster{position:fixed;z-index:999;min-width:400px;max-width:400px;font-family:sans-serif}.toaster .toast-message{padding:1rem;margin-bottom:1rem;border-radius:6px;border:1px solid;word-break:break-all;display:flex;justify-content:space-between;align-items:center;word-break:break-word}.toaster .toast-message:last-child{margin-bottom:0}.toaster .toast-message.toast-primary{background:#e9e9ff;color:#2599bb}.toaster .toast-message.toast-secondary{background:#627fa2;color:#283443}.toaster .toast-message.toast-success{background:#e4f8f0;color:#34b189}.toaster .toast-message.toast-info{background:#ebebff;color:#787aff}.toaster .toast-message.toast-warning{background:#fff2e2;color:#ffc120}.toaster .toast-message.toast-danger{background:#ffe7e7;color:#ff7070}.toaster .toast-message .msg-title{font-size:1rem;color:#000;font-weight:600;word-break:break-word;max-width:240px}.toaster .toast-message .msg-summary{font-size:.9rem;color:#626262;font-weight:400;word-break:break-word;line-height:1.2rem}.toaster.toaster-top-left{margin-top:1rem;margin-left:1rem;top:0;left:0}.toaster.toaster-top-center{margin-top:1rem;top:0;left:50%;transform:translate(-50%)}.toaster.toaster-top-right{margin-top:1rem;margin-right:1rem;top:0;right:0}.toaster.toaster-bottom-left{margin-bottom:1rem;margin-left:1rem;bottom:0;left:0}.toaster.toaster-bottom-center{margin-bottom:1rem;bottom:0;left:50%;transform:translate(-50%)}.toaster.toaster-bottom-right{margin-bottom:1rem;margin-right:1rem;bottom:0;right:0}@media (max-width: 478px){.toaster{margin-left:0!important;margin-right:0!important;left:50%!important;transform:translate(-50%)!important;min-width:300px!important;max-width:300px}}.flex-start-center{display:flex;justify-content:flex-start;align-items:center}.gap-3{gap:10px}.p-icon{width:1rem;height:1rem}.toast-icon{border-radius:50%;color:#fff;padding:2px;display:flex;justify-content:center;align-items:center}.toast-icon.toast-success,.toast-icon.toast-primary,.toast-icon.toast-secondary{background:#34b189}.toast-icon.toast-info{background:#787aff}.toast-icon.toast-warning{background:#ffc120}.toast-icon.toast-danger{background:#ff6767}.cross-icon{background:transparent;outline:none;border:none;cursor:pointer}.cross-icon.toast-success,.cross-icon.toast-primary,.cross-icon.toast-secondary{color:#34b189}.cross-icon.toast-info{color:#787aff}.cross-icon.toast-warning{color:#ffc120}.cross-icon.toast-danger{color:#ff6767}.flex-col{display:flex;flex-direction:column;gap:.375rem}\n"], dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.ToastIconDirective, selector: "[toastIcon]", inputs: ["toastIcon"] }], animations: [trigger('showHide', [
                transition(':enter', [
                    style({
                        opacity: 0,
                        transform: 'scaleX(0.98) scaleY(0)',
                        position: 'relative'
                    }),
                    animate('250ms', style({
                        opacity: 1,
                        transform: 'scale(1)'
                    }))
                ]),
                transition(':leave', [
                    style({
                        opacity: 1,
                        transform: 'scale(1)'
                    }),
                    animate('250ms', style({
                        opacity: 0,
                        transform: 'scaleX(0.98) scaleY(0)'
                    }))
                ])
            ])] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.1", ngImport: i0, type: NgToastComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-toast', animations: [trigger('showHide', [
                            transition(':enter', [
                                style({
                                    opacity: 0,
                                    transform: 'scaleX(0.98) scaleY(0)',
                                    position: 'relative'
                                }),
                                animate('250ms', style({
                                    opacity: 1,
                                    transform: 'scale(1)'
                                }))
                            ]),
                            transition(':leave', [
                                style({
                                    opacity: 1,
                                    transform: 'scale(1)'
                                }),
                                animate('250ms', style({
                                    opacity: 0,
                                    transform: 'scaleX(0.98) scaleY(0)'
                                }))
                            ])
                        ])], template: "<div style.min-width=\"{{width()}}px\" style.max-width=\"{{width()}}px\" class=\"toaster\" [ngClass]=\"position()\">\n\n  <div class=\"toast-message\" *ngFor=\"let message of messages\" [ngClass]=\"message.type\" [@showHide]>\n    <div class=\"flex-start-center gap-3\">\n      <div [ngClass]=\"message.type\" class=\"toast-icon\">\n        <div [toastIcon]=\"message.type\" class=\"toast-icon\"></div>\n      </div>\n      <div class=\"flex-col\">\n        @if (message.title && message.title !== '') {\n          <span class=\"msg-title\">{{message.title}}</span>\n        }\n        <span style.max-width=\"{{width() - 30}}px\" class=\"msg-summary\">{{message.message}}</span>\n      </div>\n    </div>\n    <button (click)=\"remove(message)\" [ngClass]=\"message.type\" class=\"cross-icon\">\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 14 14\" fill=\"none\" class=\"p-icon p-toast-icon-close-icon\"\n        aria-hidden=\"true\">\n        <path\n          d=\"M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z\"\n          fill=\"currentColor\"></path>\n      </svg></button>\n  </div>\n</div>\n", styles: [".toaster{position:fixed;z-index:999;min-width:400px;max-width:400px;font-family:sans-serif}.toaster .toast-message{padding:1rem;margin-bottom:1rem;border-radius:6px;border:1px solid;word-break:break-all;display:flex;justify-content:space-between;align-items:center;word-break:break-word}.toaster .toast-message:last-child{margin-bottom:0}.toaster .toast-message.toast-primary{background:#e9e9ff;color:#2599bb}.toaster .toast-message.toast-secondary{background:#627fa2;color:#283443}.toaster .toast-message.toast-success{background:#e4f8f0;color:#34b189}.toaster .toast-message.toast-info{background:#ebebff;color:#787aff}.toaster .toast-message.toast-warning{background:#fff2e2;color:#ffc120}.toaster .toast-message.toast-danger{background:#ffe7e7;color:#ff7070}.toaster .toast-message .msg-title{font-size:1rem;color:#000;font-weight:600;word-break:break-word;max-width:240px}.toaster .toast-message .msg-summary{font-size:.9rem;color:#626262;font-weight:400;word-break:break-word;line-height:1.2rem}.toaster.toaster-top-left{margin-top:1rem;margin-left:1rem;top:0;left:0}.toaster.toaster-top-center{margin-top:1rem;top:0;left:50%;transform:translate(-50%)}.toaster.toaster-top-right{margin-top:1rem;margin-right:1rem;top:0;right:0}.toaster.toaster-bottom-left{margin-bottom:1rem;margin-left:1rem;bottom:0;left:0}.toaster.toaster-bottom-center{margin-bottom:1rem;bottom:0;left:50%;transform:translate(-50%)}.toaster.toaster-bottom-right{margin-bottom:1rem;margin-right:1rem;bottom:0;right:0}@media (max-width: 478px){.toaster{margin-left:0!important;margin-right:0!important;left:50%!important;transform:translate(-50%)!important;min-width:300px!important;max-width:300px}}.flex-start-center{display:flex;justify-content:flex-start;align-items:center}.gap-3{gap:10px}.p-icon{width:1rem;height:1rem}.toast-icon{border-radius:50%;color:#fff;padding:2px;display:flex;justify-content:center;align-items:center}.toast-icon.toast-success,.toast-icon.toast-primary,.toast-icon.toast-secondary{background:#34b189}.toast-icon.toast-info{background:#787aff}.toast-icon.toast-warning{background:#ffc120}.toast-icon.toast-danger{background:#ff6767}.cross-icon{background:transparent;outline:none;border:none;cursor:pointer}.cross-icon.toast-success,.cross-icon.toast-primary,.cross-icon.toast-secondary{color:#34b189}.cross-icon.toast-info{color:#787aff}.cross-icon.toast-warning{color:#ffc120}.cross-icon.toast-danger{color:#ff6767}.flex-col{display:flex;flex-direction:column;gap:.375rem}\n"] }]
        }], ctorParameters: () => [{ type: i1.NgToastService }] });
//# sourceMappingURL=data:application/json;base64,