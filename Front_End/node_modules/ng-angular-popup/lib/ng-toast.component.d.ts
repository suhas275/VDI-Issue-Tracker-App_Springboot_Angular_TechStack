import { ToastType } from './toast-type.enum';
import { OnInit } from '@angular/core';
import { ToastMessage } from './toast-message.model';
import { ToasterPosition } from './toaster-position.enum';
import { NgToastService } from './ng-toast.service';
import * as i0 from "@angular/core";
export declare class NgToastComponent implements OnInit {
    private toastService;
    position: import("@angular/core").InputSignal<ToasterPosition>;
    width: import("@angular/core").InputSignal<number>;
    ToastType: typeof ToastType;
    private _toasterSubject$;
    messages: ToastMessage[];
    constructor(toastService: NgToastService);
    ngOnInit(): void;
    private _handleToastMessage;
    private _isToasterPositionTop;
    private _removeMessage;
    remove(message: ToastMessage): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgToastComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgToastComponent, "ng-toast", never, { "position": { "alias": "position"; "required": false; "isSignal": true; }; "width": { "alias": "width"; "required": false; "isSignal": true; }; }, {}, never, never, false, never>;
}
