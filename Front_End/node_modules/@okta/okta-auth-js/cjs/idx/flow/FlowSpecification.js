"use strict";

exports.getFlowSpecification = getFlowSpecification;

var _AuthenticationFlow = require("./AuthenticationFlow");

var _AuthenticationFlowMonitor = require("./AuthenticationFlowMonitor");

var _PasswordRecoveryFlow = require("./PasswordRecoveryFlow");

var _PasswordRecoveryFlowMonitor = require("./PasswordRecoveryFlowMonitor");

var _RegistrationFlow = require("./RegistrationFlow");

var _RegistrationFlowMonitor = require("./RegistrationFlowMonitor");

function getFlowSpecification(oktaAuth, flow = 'proceed') {
  let remediators, flowMonitor, actions;

  switch (flow) {
    case 'register':
    case 'signup':
    case 'enrollProfile':
      remediators = _RegistrationFlow.RegistrationFlow;
      flowMonitor = new _RegistrationFlowMonitor.RegistrationFlowMonitor(oktaAuth);
      break;

    case 'recoverPassword':
    case 'resetPassword':
      remediators = _PasswordRecoveryFlow.PasswordRecoveryFlow;
      flowMonitor = new _PasswordRecoveryFlowMonitor.PasswordRecoveryFlowMonitor(oktaAuth);
      actions = ['currentAuthenticator-recover', 'currentAuthenticatorEnrollment-recover'];
      break;

    default:
      // authenticate
      remediators = _AuthenticationFlow.AuthenticationFlow;
      flowMonitor = new _AuthenticationFlowMonitor.AuthenticationFlowMonitor(oktaAuth);
      break;
  }

  return {
    flow,
    remediators,
    flowMonitor,
    actions
  };
}
//# sourceMappingURL=FlowSpecification.js.map