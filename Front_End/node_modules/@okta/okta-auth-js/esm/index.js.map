{"version":3,"file":"index.js","sources":["../../lib/errors/CustomError.ts","../../lib/errors/AuthApiError.ts","../../lib/errors/AuthPollStopError.ts","../../lib/errors/AuthSdkError.ts","../../lib/errors/OAuthError.ts","../../lib/errors/index.ts","../../lib/crypto/browser.ts","../../lib/crypto/base64.ts","../../lib/crypto/oidcHash.ts","../../lib/util/console.ts","../../lib/oidc/util/urlParams.ts","../../lib/util/emailVerify.ts","../../lib/util/misc.ts","../../lib/util/object.ts","../../lib/util/types.ts","../../lib/util/url.ts","../../lib/crypto/verifyToken.ts","../../lib/constants.ts","../../lib/http/headers.ts","../../lib/http/request.ts","../../lib/tx/util.ts","../../lib/tx/poll.ts","../../lib/tx/AuthTransaction.ts","../../lib/tx/api.ts","../../lib/tx/TransactionState.ts","../../lib/oidc/util/pkce.ts","../../lib/session.ts","../../lib/oidc/endpoints/authorize.ts","../../lib/oidc/endpoints/token.ts","../../lib/oidc/endpoints/well-known.ts","../../lib/oidc/util/browser.ts","../../lib/oidc/util/oauth.ts","../../lib/features.ts","../../lib/oidc/util/defaultTokenParams.ts","../../lib/oidc/util/errors.ts","../../lib/oidc/util/loginRedirect.ts","../../lib/oidc/util/prepareTokenParams.ts","../../lib/oidc/util/refreshToken.ts","../../lib/oidc/util/validateClaims.ts","../../lib/types/Transaction.ts","../../lib/idx/types/index.ts","../../lib/types/Token.ts","../../lib/oidc/util/validateToken.ts","../../lib/oidc/decodeToken.ts","../../lib/oidc/revokeToken.ts","../../lib/oidc/exchangeCodeForTokens.ts","../../lib/oidc/verifyToken.ts","../../lib/oidc/handleOAuthResponse.ts","../../lib/oidc/getToken.ts","../../lib/oidc/getWithoutPrompt.ts","../../lib/oidc/renewTokensWithRefresh.ts","../../lib/oidc/renewToken.ts","../../lib/oidc/renewTokens.ts","../../lib/oidc/getUserInfo.ts","../../lib/oidc/getWithPopup.ts","../../lib/oidc/getWithRedirect.ts","../../lib/oidc/parseFromUrl.ts","../../lib/browser/browserStorage.ts","../../lib/builderUtil.ts","../../lib/clock.ts","../../lib/services/TokenService.ts","../../lib/TokenManager.ts","../../lib/PromiseQueue.ts","../../lib/browser/fingerprint.ts","../../lib/AuthStateManager.ts","../../lib/SavedObject.ts","../../lib/StorageManager.ts","../../lib/idx/types/idx-js.ts","../../lib/util/sharedStorage.ts","../../lib/TransactionManager.ts","../../lib/fetch/fetchRequest.ts","../../lib/server/serverStorage.ts","../../lib/options.ts","../../lib/idx/transactionMeta.ts","../../lib/idx/interact.ts","../../lib/idx/introspect.ts","../../lib/idx/remediate.ts","../../lib/idx/remediators/util.ts","../../lib/idx/remediators/Base/Remediator.ts","../../lib/idx/remediators/Base/VerifyAuthenticator.ts","../../lib/idx/remediators/EnrollAuthenticator.ts","../../lib/idx/remediators/ChallengeAuthenticator.ts","../../lib/idx/remediators/ResetAuthenticator.ts","../../lib/idx/remediators/EnrollProfile.ts","../../lib/idx/remediators/Identify.ts","../../lib/idx/remediators/ReEnrollAuthenticator.ts","../../lib/idx/remediators/RedirectIdp.ts","../../lib/idx/remediators/Base/SelectAuthenticator.ts","../../lib/idx/remediators/SelectAuthenticatorAuthenticate.ts","../../lib/idx/remediators/SelectAuthenticatorEnroll.ts","../../lib/idx/remediators/SelectEnrollProfile.ts","../../lib/idx/remediators/Base/AuthenticatorData.ts","../../lib/idx/remediators/AuthenticatorVerificationData.ts","../../lib/idx/remediators/AuthenticatorEnrollmentData.ts","../../lib/idx/remediators/Skip.ts","../../lib/idx/run.ts","../../lib/idx/flow/AuthenticationFlow.ts","../../lib/idx/flow/FlowMonitor.ts","../../lib/idx/flow/AuthenticationFlowMonitor.ts","../../lib/idx/flow/PasswordRecoveryFlow.ts","../../lib/idx/flow/PasswordRecoveryFlowMonitor.ts","../../lib/idx/flow/RegistrationFlow.ts","../../lib/idx/flow/RegistrationFlowMonitor.ts","../../lib/idx/flow/FlowSpecification.ts","../../lib/idx/authenticate.ts","../../lib/idx/cancel.ts","../../lib/idx/proceed.ts","../../lib/idx/startTransaction.ts","../../lib/idx/register.ts","../../lib/idx/recoverPassword.ts","../../lib/idx/handleInteractionCodeRedirect.ts","../../lib/idx/headers.ts","../../lib/OktaUserAgent.ts","../../lib/OktaAuth.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class CustomError extends Error {\n  constructor(message: string) {\n    // https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, HttpResponse } from '../types';\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: string[];\n  xhr?: HttpResponse;\n\n  constructor(err: APIError, xhr?: HttpResponse) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class AuthPollStopError extends CustomError {\n  constructor() {\n    const message = 'The poll was stopped by the sdk';\n    super(message);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError } from '../types';\n\nexport default class AuthSdkError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode: string;\n  errorLink: string;\n  errorId: string;\n  errorCauses: string[];\n  xhr?: XMLHttpRequest;\n\n  constructor(msg: string, xhr?: XMLHttpRequest) {\n    super(msg);\n    this.name = 'AuthSdkError';\n    this.errorCode = 'INTERNAL';\n    this.errorSummary = msg;\n    this.errorLink = 'INTERNAL';\n    this.errorId = 'INTERNAL';\n    this.errorCauses = [];\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class OAuthError extends CustomError {\n  errorCode: string;\n  errorSummary: string;\n\n  constructor(errorCode: string, summary: string) {\n    super(summary);\n\n    this.name = 'OAuthError';\n    this.errorCode = errorCode;\n    this.errorSummary = summary;\n  }\n}\n\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from './AuthApiError';\nimport AuthPollStopError from './AuthPollStopError';\nimport AuthSdkError from './AuthSdkError';\nimport OAuthError from './OAuthError';\n\nfunction isAuthApiError(obj: any): obj is AuthApiError {\n  return (obj instanceof AuthApiError);\n}\n\nexport {\n  isAuthApiError,\n  AuthApiError,\n  AuthPollStopError,\n  AuthSdkError,\n  OAuthError\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global atob, btoa, crypto */\nconst a = function(str) { return atob(str); };\nconst b = function (str) { return btoa(str); };\nconst c = typeof crypto === 'undefined' ? null : crypto;\n\nexport { a as atob, b as btoa, c as webcrypto };\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthSdkError } from '../errors';\nimport { atob, btoa } from './webcrypto';\n\n// converts a string to base64 (url/filename safe variant)\nexport function stringToBase64Url(str) {\n  var b64 = btoa(str);\n  return base64ToBase64Url(b64);\n}\n\n// converts a standard base64-encoded string to a \"url/filename safe\" variant\nexport function base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n// converts a \"url/filename safe\" base64 string to a \"standard\" base64 string\nexport function base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nexport function base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n  switch (b64.length % 4) {\n    case 0:\n      break;\n    case 2:\n      b64 += '==';\n      break;\n    case 3:\n      b64 += '=';\n      break;\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n  var utf8 = atob(b64);\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\n\nexport function stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function base64UrlDecode(str) {\n  return atob(base64UrlToBase64(str));\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global TextEncoder */\nimport { stringToBase64Url } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function getOidcHash(str) {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = intBuffer.slice(0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nexport function getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\n\nexport function getConsole() {\n  var nativeConsole = getNativeConsole();\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n  return {\n    log: function() {},\n    warn: function() {},\n    group: function() {},\n    groupEnd: function() {}\n  };\n}\n\nexport function warn(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecate(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecateWrap(text, fn) {\n  return function() {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nexport function urlParamsToObject(hashOrSearch: string) {\n  // Predefine regexs for parsing hash\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n\n  // Some hash based routers will automatically add a / character after the hash\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n\n  // Remove the leading # or ?\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n\n\n  var obj = {};\n\n  // Loop until we have no more params\n  var param;\n  while (true) { // eslint-disable-line no-constant-condition\n    param = paramSplit.exec(fragment);\n    if (!param) { break; }\n\n    var key = param[1];\n    var value = param[2];\n\n    // id_token should remain base64url encoded\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n  return obj;\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { urlParamsToObject  } from '../oidc/util/urlParams';\n\nexport interface EmailVerifyCallbackResponse {\n  state: string;\n  stateTokenExternalId: string;\n}\n\n// Check if state && stateTokenExternalId have been passed back in the url\nexport function isEmailVerifyCallback (urlPath: string): boolean {\n  return /(stateTokenExternalId=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\n// Parse state and stateTokenExternalId from a urlPath (should be either a search or fragment from the URL)\nexport function parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n  return urlParamsToObject(urlPath) as EmailVerifyCallbackResponse;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n      isoDate = new Date(isoTime);\n\n  return isoDate.toUTCString();\n}\n\nexport function genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n  return random;\n}\n\nexport function delay(ms) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function bind(fn, ctx) {\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    args = additionalArgs.concat(args);\n    return fn.apply(ctx, args);\n  };\n}\n\n// TODO: replace all references with `Object.assign` then remove this function\nexport function extend() {\n  // First object will be modified!\n  var obj1 = arguments[0];\n  // Properties from other objects will be copied over\n  var objArray = [].slice.call(arguments, 1);\n  objArray.forEach(function(obj) {\n    for (var prop in obj) {\n      // copy over all properties with defined values\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1; // return the modified object\n}\n\nexport function removeNils(obj) {\n  var cleaned = {};\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n  return cleaned;\n}\n\nexport function clone(obj) {\n  if (obj) {\n    var str = JSON.stringify(obj);\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n  return obj;\n}\n\n// Analogous to _.omit\nexport function omit(obj, ...props: any[]) {\n  // var props = Array.prototype.slice.call(arguments, 1);\n  var newobj = {};\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && props.indexOf(p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n  return clone(newobj);\n}\n\nexport function find(collection, searchParams) {\n  var c = collection.length;\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) {\n      return item;\n    }\n  }\n}\n\nexport function getLink(obj, linkName, altName?) {\n  if (!obj || !obj._links) {\n    return;\n  }\n\n  var link = clone(obj._links[linkName]);\n\n  // If a link has a name and we have an altName, return if they match\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\n\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isString(obj: any): obj is string {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nexport function isObject(obj: any): obj is object {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isNumber(obj: any): obj is number {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\n\nexport function isFunction(fn: any): fn is Function {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\n\nexport function isPromise(obj) {\n  return obj && obj.finally && (typeof obj.finally === 'function');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^(?:[a-z]+:)?\\/\\//i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]));\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util';\nimport { stringToBuffer, base64UrlDecode } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function verifyToken(idToken, key) {\n  key = clone(key);\n\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: 'SHA-256' }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n\n  // https://connect.microsoft.com/IE/feedback/details/2242108/webcryptoapi-importing-jwk-with-use-field-fails\n  // This is a metadata tag that specifies the intent of how the key should be used.\n  // It's not necessary to properly verify the jwt's signature.\n  delete key.use;\n\n  // @ts-ignore\n  return webcrypto.subtle.importKey(\n    format,\n    key,\n    algo,\n    extractable,\n    usages\n  )\n  .then(function(cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n\n    return webcrypto.subtle.verify(\n      algo,\n      cryptoKey,\n      signature,\n      payload\n    );\n  });\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport const STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nexport const DEFAULT_POLLING_DELAY = 500;\nexport const DEFAULT_MAX_CLOCK_SKEW = 300;\nexport const DEFAULT_CACHE_DURATION = 86400;\nexport const REDIRECT_OAUTH_PARAMS_NAME = 'okta-oauth-redirect-params';\nexport const REDIRECT_STATE_COOKIE_NAME = 'okta-oauth-state';\nexport const REDIRECT_NONCE_COOKIE_NAME = 'okta-oauth-nonce';\nexport const TOKEN_STORAGE_NAME = 'okta-token-storage';\nexport const CACHE_STORAGE_NAME = 'okta-cache-storage';\nexport const PKCE_STORAGE_NAME = 'okta-pkce-storage';\nexport const TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nexport const SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nexport const ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nexport const IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nexport const ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nexport const ID_TOKEN_STORAGE_KEY =  'idToken';\nexport const REFRESH_TOKEN_STORAGE_KEY =  'refreshToken';\nexport const REFERRER_PATH_STORAGE_KEY = 'referrerPath';\n\n// Code verifier: Random URL-safe string with a minimum length of 43 characters.\n// Code challenge: Base64 URL-encoded SHA-256 hash of the code verifier.\nexport const MIN_VERIFIER_LENGTH = 43;\nexport const MAX_VERIFIER_LENGTH = 128;\nexport const DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\n\nexport const IDX_API_VERSION = '1.0.0';","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuth } from '../types';\n\nexport function setRequestHeader(authClient: OktaAuth, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity */\nimport { isString, clone, isAbsoluteUrl, removeNils } from '../util';\nimport AuthApiError from '../errors/AuthApiError';\nimport { STATE_TOKEN_KEY_NAME, DEFAULT_CACHE_DURATION } from '../constants';\nimport { OktaAuth, RequestOptions, FetchOptions, RequestData } from '../types';\n\nexport function httpRequest(sdk: OktaAuth, options: RequestOptions): Promise<any> {\n  options = options || {};\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true, // default value is false\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers: HeadersInit = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    ...oktaUserAgentHeader\n  };\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers) as HeadersInit;\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions: FetchOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n\n  var err, res;\n  return sdk.options.httpRequestClient(method, url, ajaxOptions)\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && isString(res)) {\n        res = JSON.parse(res);\n        if (res && typeof res === 'object' && !res.headers) {\n          res.headers = resp.headers;\n        }\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          storage.delete(STATE_TOKEN_KEY_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url, {\n          expiresAt: Math.floor(Date.now()/1000) + DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n\n      return res;\n    })\n    .catch(function(resp) {\n      var serverErr = resp.responseText || {};\n      if (isString(serverErr)) {\n        try {\n          serverErr = JSON.parse(serverErr);\n        } catch (e) {\n          serverErr = {\n            errorSummary: 'Unknown error'\n          };\n        }\n      }\n\n      if (resp.status >= 500) {\n        serverErr.errorSummary = 'Unknown error';\n      }\n\n      if (sdk.options.transformErrorXHR) {\n        resp = sdk.options.transformErrorXHR(clone(resp));\n      }\n\n      err = new AuthApiError(serverErr, resp);\n\n      if (err.errorCode === 'E0000011') {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n\n      throw err;\n    });\n}\n\nexport function get(sdk: OktaAuth, url: string, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nexport function post(sdk: OktaAuth, url: string, args?: RequestData, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n\nimport { TransactionState } from './TransactionState';\n\nexport function addStateToken(res, options?) {\n  var builtArgs = {} as TransactionState;\n  Object.assign(builtArgs, options);\n\n  // Add the stateToken if one isn't passed and we have one\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n\n  return builtArgs;\n}\n\nexport function getStateToken(res) {\n  return addStateToken(res);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { post } from '../http';\nimport { isNumber, isObject, getLink, toQueryString, delay as delayFn } from '../util';\nimport { DEFAULT_POLLING_DELAY } from '../constants';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport AuthPollStopError from '../errors/AuthPollStopError';\nimport { TransactionState } from './TransactionState';\nimport { AuthTransaction } from './AuthTransaction';\nimport { getStateToken } from './util';\n\nexport interface PollOptions {\n  delay?: number;\n  rememberDevice?: boolean;\n  autoPush?: boolean;\n  transactionCallBack?: (TransactionState) => void;\n}\n\nexport function getPollFn(sdk, res: TransactionState, ref) {\n  return function (options: PollOptions | number) {\n    var delay;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay = options;\n    } else if (isObject(options)) {\n      options = options as PollOptions;\n      delay = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay && delay !== 0) {\n      delay = DEFAULT_POLLING_DELAY;\n    }\n\n    // Get the poll function\n    var pollLink = getLink(res, 'next', 'poll');\n    // eslint-disable-next-line complexity\n    function pollFn() {\n      var opts = {} as PollOptions;\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      }\n      else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      }\n      else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true\n      });\n    }\n\n    ref.isPolling = true;\n\n    var retryCount = 0;\n    var recursivePoll = function () {\n      // If the poll was manually stopped during the delay\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n      return pollFn()\n        .then(function (pollRes) {\n          // Reset our retry counter on success\n          retryCount = 0;\n\n          // If we're still waiting\n          if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n\n            // If the poll was manually stopped while the pollFn was called\n            if (!ref.isPolling) {\n              throw new AuthPollStopError();\n            }\n\n            if (typeof transactionCallBack === 'function') {\n              transactionCallBack(pollRes);\n            }\n\n            // Continue poll\n            return delayFn(delay).then(recursivePoll);\n\n          } else {\n            // Any non-waiting result, even if polling was stopped\n            // during a request, will return\n            ref.isPolling = false;\n            return new AuthTransaction(sdk, pollRes);\n          }\n        })\n        .catch(function(err) {\n          // Exponential backoff, up to 16 seconds\n          if (err.xhr &&\n              (err.xhr.status === 0 || err.xhr.status === 429) &&\n              retryCount <= 4) {\n            var delayLength = Math.pow(2, retryCount) * 1000;\n            retryCount++;\n            return delayFn(delayLength)\n              .then(recursivePoll);\n          }\n          throw err;\n        });\n    };\n    return recursivePoll()\n      .catch(function(err) {\n        ref.isPolling = false;\n        throw err;\n      });\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { get } from '../http';\nimport { find, omit, toQueryString, clone, isObject } from '../util';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { TransactionState } from './TransactionState';\nimport { addStateToken } from './util';\nimport { getPollFn } from './poll';\nimport { postToTransaction } from './api';\nimport { IdxStatus } from '../idx/types';\n\ninterface PostToTransactionParams {\n  autoPush?: boolean;\n  rememberDevice?: boolean;\n  updatePhone?: boolean;\n}\n\ntype AuthTransactionFunction = (obj?: any) => Promise<AuthTransaction>;\n\ninterface AuthTransactionFunctions {\n  // common\n  next?: AuthTransactionFunction;\n  cancel?: AuthTransactionFunction;\n  skip?: AuthTransactionFunction;\n  // locked_out\n  unlock?: AuthTransactionFunction;\n  // password\n  changePassword?: AuthTransactionFunction;\n  resetPassword?: AuthTransactionFunction;\n  // recovery\n  answer?: AuthTransactionFunction;\n  recovery?: AuthTransactionFunction;\n  // recovery_challenge\n  verify?: AuthTransactionFunction;\n  resend?: AuthTransactionFunction;\n  // mfa_enroll_activate\n  activate?: AuthTransactionFunction;\n  poll?: AuthTransactionFunction;\n  prev?: AuthTransactionFunction;\n}\n\nexport class AuthTransaction implements TransactionState, AuthTransactionFunctions {\n  next?: AuthTransactionFunction;\n  cancel?: AuthTransactionFunction;\n  skip?: AuthTransactionFunction;\n  unlock?: AuthTransactionFunction;\n  changePassword?: AuthTransactionFunction;\n  resetPassword?: AuthTransactionFunction;\n  answer?: AuthTransactionFunction;\n  recovery?: AuthTransactionFunction;\n  verify?: AuthTransactionFunction;\n  resend?: AuthTransactionFunction;\n  activate?: AuthTransactionFunction;\n  poll?: AuthTransactionFunction;\n  prev?: AuthTransactionFunction;\n\n  data: TransactionState;\n  stateToken?: string;\n  sessionToken?: string;\n  status: string | IdxStatus;\n  user?: Record<string, any>;\n  factor?: Record<string, any>;\n  factors?: Array<Record<string, any> >;\n  policy?: Record<string, any>;\n  scopes?: Array<Record<string, any> >;\n  target?: Record<string, any>;\n  authentication?: Record<string, any>;\n  constructor(sdk, res = null) {\n    if (res) {\n      this.data = res;\n\n      if (this.data.interactionHandle) {\n        this.status = res.status;\n        return;\n      }\n\n      // Parse response from Authn V1\n      Object.assign(this, flattenEmbedded(sdk, res, res, {}));\n      delete this.stateToken;\n\n      // RECOVERY_CHALLENGE has some responses without _links.\n      // Without _links, we emulate cancel to make it intuitive\n      // to return to the starting state. We may remove this\n      // when OKTA-75434 is resolved\n      if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n        this.cancel = function() {\n          return Promise.resolve(new AuthTransaction(sdk));\n        };\n      }\n    }\n  }\n}\n\nfunction link2fn(sdk, res, obj, link, ref) {\n  if (Array.isArray(link)) {\n    return function(name, opts?) {\n      if (!name) {\n        throw new AuthSdkError('Must provide a link name');\n      }\n\n      var lk = find(link, {name: name});\n      if (!lk) {\n        throw new AuthSdkError('No link found for that name');\n      }\n\n      return link2fn(sdk, res, obj, lk, ref)(opts);\n    };\n\n  } else if (link.hints &&\n      link.hints.allow &&\n      link.hints.allow.length === 1) {\n    var method = link.hints.allow[0];\n    switch (method) {\n\n      case 'GET':\n        return function() {\n          return get(sdk, link.href, { withCredentials: true });\n        };\n\n      case 'POST':\n        // eslint-disable-next-line max-statements,complexity\n        return function(opts: TransactionState) {\n          if (ref && ref.isPolling) {\n            ref.isPolling = false;\n          }\n\n          var data = addStateToken(res, opts);\n\n          if (res.status === 'MFA_ENROLL' || res.status === 'FACTOR_ENROLL') {\n            // Add factorType and provider\n            Object.assign(data, {\n              factorType: obj.factorType,\n              provider: obj.provider\n            });\n          }\n\n          var params = {} as PostToTransactionParams;\n          var autoPush = data.autoPush;\n          if (autoPush !== undefined) {\n            if (typeof autoPush === 'function') {\n              try {\n                params.autoPush = !!autoPush();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n              }\n            }\n            else if (autoPush !== null) {\n              params.autoPush = !!autoPush;\n            }\n            data = omit(data, 'autoPush');\n          }\n\n          var rememberDevice = data.rememberDevice;\n          if (rememberDevice !== undefined) {\n            if (typeof rememberDevice === 'function') {\n              try {\n                params.rememberDevice = !!rememberDevice();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n              }\n            }\n            else if (rememberDevice !== null) {\n              params.rememberDevice = !!rememberDevice;\n            }\n            data = omit(data, 'rememberDevice');\n\n          } else if (data.profile &&\n                    data.profile.updatePhone !== undefined) {\n            if (data.profile.updatePhone) {\n              params.updatePhone = true;\n            }\n            data.profile = omit(data.profile, 'updatePhone');\n          }\n          var href = link.href + toQueryString(params);\n          return postToTransaction(sdk, href, data);\n        };\n    }\n  }\n}\n\nfunction links2fns(sdk, res, obj, ref) {\n  var fns = {} as AuthTransactionFunctions;\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n\n    var link = obj._links[linkName];\n    \n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n\n    switch (linkName) {\n      // poll is only found at the transaction\n      // level, so we don't need to pass the link\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n\n      default:\n        var fn = link2fn(sdk, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\n\n// eslint-disable-next-line complexity\nfunction flattenEmbedded(sdk, res, obj, ref) {\n  obj = obj || res;\n  obj = clone(obj);\n\n  if (Array.isArray(obj)) {\n    var objArr = [];\n    for (var o = 0, ol = obj.length; o < ol; o++) {\n      objArr.push(flattenEmbedded(sdk, res, obj[o], ref));\n    }\n    return objArr;\n  }\n\n  var embedded = obj._embedded || {};\n\n  for (var key in embedded) {\n    if (!Object.prototype.hasOwnProperty.call(embedded, key)) {\n      continue;\n    }\n\n    // Flatten any nested _embedded objects\n    if (isObject(embedded[key]) || Array.isArray(embedded[key])) {\n      embedded[key] = flattenEmbedded(sdk, res, embedded[key], ref);\n    }\n  }\n\n  // Convert any links on the embedded object\n  var fns = links2fns(sdk, res, obj, ref);\n  Object.assign(embedded, fns);\n\n  obj = omit(obj, '_embedded', '_links');\n  Object.assign(obj, embedded);\n  return obj;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity, max-statements */\nimport { post } from '../http';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { STATE_TOKEN_KEY_NAME } from '../constants';\nimport { addStateToken } from './util';\nimport { AuthTransaction } from './AuthTransaction';\n\nfunction transactionStatus(sdk, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn', args, { withCredentials: true });\n}\n\nfunction resumeTransaction(sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to resume'));\n    }\n  }\n  return sdk.tx.status(args)\n    .then(function(res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n\nfunction introspect (sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to evaluate'));\n    }\n  }\n  return transactionStep(sdk, args)\n    .then(function (res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n\nfunction transactionStep(sdk, args) {\n  args = addStateToken(sdk, args);\n  // v1 pipeline introspect API\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn/introspect', args, { withCredentials: true });\n}\n\nfunction transactionExists(sdk) {\n  // We have a cookie state token\n  return !!sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n}\n\nfunction postToTransaction(sdk, url, args, options?) {\n  options = Object.assign({ withCredentials: true }, options);\n  return post(sdk, url, args, options)\n    .then(function(res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n\nexport {\n  transactionStatus,\n  resumeTransaction,\n  transactionExists,\n  postToTransaction,\n  introspect,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nexport class TransactionState {\n  interactionHandle?: string;\n\n// Authn V1 only\n  stateToken?: string;\n  type?: string;\n  expiresAt?: string;\n  relayState?: string;\n  factorResult?: string;\n  factorType?: string;\n  recoveryToken?: string;\n  recoveryType?: string;\n  autoPush?: boolean | (() => boolean);\n  rememberDevice?: boolean | (() => boolean);\n  profile?: {\n    updatePhone?: boolean;\n  };\n}","/*!\n * Copyright (c) 2019-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n /* eslint-disable complexity, max-statements */\nimport { stringToBase64Url } from '../../crypto';\nimport { MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH, DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport { webcrypto } from '../../crypto';\n\nfunction dec2hex (dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  webcrypto.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\n\nfunction generateVerifier(prefix?: string): string {\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\n\nfunction computeChallenge(str: string): PromiseLike<any> {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n\nexport default {\n  DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier,\n  computeChallenge\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\nimport { omit, getLink, toQueryString } from './util';\nimport { get, post, httpRequest } from './http';\n\nfunction sessionExists(sdk) {\n  return sdk.session.get()\n    .then(function(res) {\n      if (res.status === 'ACTIVE') {\n        return true;\n      }\n      return false;\n    })\n    .catch(function() {\n      return false;\n    });\n}\n\nfunction getSession(sdk) { \n  return get(sdk, '/api/v1/sessions/me', { withCredentials: true })\n  .then(function(session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function() {\n      return post(sdk, getLink(session, 'refresh').href, {}, { withCredentials: true });\n    };\n\n    res.user = function() {\n      return get(sdk, getLink(session, 'user').href, { withCredentials: true });\n    };\n\n    return res;\n  })\n  .catch(function() {\n    // Return INACTIVE status on failure\n    return {status: 'INACTIVE'};\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, { withCredentials: true });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' +\n    toQueryString({\n      checkAccountSetupComplete: true,\n      token: sessionToken,\n      redirectUrl: redirectUrl\n    }));\n}\n\nexport {\n  sessionExists,\n  getSession,\n  closeSession,\n  refreshSession,\n  setCookieAndRedirect\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { isString, removeNils, toQueryString } from '../../util';\nimport { AuthSdkError } from '../../errors';\nimport { OAuthParams, TokenParams } from '../../types';\n\nexport function convertTokenParamsToOAuthParams(tokenParams: TokenParams) {\n  // Quick validation\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthParams: OAuthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n  };\n  oauthParams = removeNils(oauthParams) as OAuthParams;\n\n  ['idp_scope', 'response_type'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType.indexOf('id_token') !== -1 &&\n    tokenParams.scopes.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else {\n    oauthParams.scope = tokenParams.scopes.join(' ');\n  }\n\n  return oauthParams;\n}\n\nexport function buildAuthorizeParams(tokenParams: TokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString({ \n    ...oauthQueryParams, \n    ...(tokenParams.extraParams && { ...tokenParams.extraParams })\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../../errors';\nimport { CustomUrls, OAuthParams, OAuthResponse, RefreshToken, TokenParams } from '../../types';\nimport { removeNils, toQueryString } from '../../util';\nimport { httpRequest } from '../../http';\n\nfunction validateOptions(options: TokenParams) {\n  // Quick validation\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\n\nfunction getPostData(sdk, options: TokenParams): string {\n  // Convert Token params to OAuth params, sent to the /token endpoint\n  var params: OAuthParams = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n\n  const { clientSecret } = sdk.options;\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n\n  // Encode as URL string\n  return toQueryString(params).slice(1);\n}\n\n// exchange authorization code for an access token\nexport function postToTokenEndpoint(sdk, options: TokenParams, urls: CustomUrls): Promise<OAuthResponse> {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n\n  return httpRequest(sdk, {\n    url: urls.tokenUrl,\n    method: 'POST',\n    args: data,\n    headers\n  });\n}\n\nexport function postRefreshToken(sdk, options: TokenParams, refreshToken: RefreshToken): Promise<OAuthResponse> {\n  return httpRequest(sdk, {\n    url: refreshToken.tokenUrl,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n\n    args: Object.entries({\n      client_id: options.clientId, // eslint-disable-line camelcase\n      grant_type: 'refresh_token', // eslint-disable-line camelcase\n      scope: refreshToken.scopes.join(' '),\n      refresh_token: refreshToken.refreshToken, // eslint-disable-line camelcase\n    }).map(function ([name, value]) {\n      return name + '=' + encodeURIComponent(value);\n    }).join('&'),\n  });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { get } from '../../http';\nimport { find } from '../../util';\nimport { OktaAuth, WellKnownResponse } from '../../types';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nexport function getWellKnown(sdk: OktaAuth, issuer?: string): Promise<WellKnownResponse> {\n  var authServerUri = (issuer || sdk.options.issuer);\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nexport function getKey(sdk: OktaAuth, issuer: string, kid: string): Promise<string> {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  return getWellKnown(sdk, issuer)\n  .then(function(wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n\n    // Check our kid against the cached version (if it exists and isn't expired)\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    // Remove cache for the key\n    httpCache.clearStorage(jwksUri);\n\n    // Pull the latest keys if the key wasn't in the cache\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    })\n    .then(function(res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window, document */\n/* eslint-disable complexity, max-statements */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuth } from '../../types';\n\nexport function addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\n\nexport function removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\n\nexport function loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n\n  return document.body.appendChild(iframe);\n}\n\nexport function loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' +\n    'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\n\nexport function addPostMessageListener(sdk: OktaAuth, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new Promise(function (resolve, reject) {\n\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        // A message not meant for us\n        return;\n      }\n\n      // Configuration mismatch between saved token and current app instance\n      // This may happen if apps with different issuers are running on the same host url\n      // If they share the same storage key, they may read and write tokens in the same location.\n      // Common when developing against http://localhost\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n      resolve(e.data);\n    };\n\n    addListener(window, 'message', responseHandler);\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || 120000);\n  });\n\n  return msgReceivedOrTimeout\n    .finally(function () {\n      clearTimeout(timeoutId);\n      removeListener(window, 'message', responseHandler);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\nimport { genRandomString, removeTrailingSlash } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuth, CustomUrls } from '../../types';\n\nexport function generateState() {\n  return genRandomString(64);\n}\n\nexport function generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk: OktaAuth, options: CustomUrls = {}) {\n  const issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nexport function getOAuthBaseUrl(sdk: OktaAuth, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nexport function getOAuthDomain(sdk: OktaAuth, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nexport function getOAuthUrls(sdk: OktaAuth, options?: CustomUrls) {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n\n  // Get user-supplied arguments\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\n/* global document, window, TextEncoder, navigator */\n\nimport { webcrypto } from './crypto';\n\nconst isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\t\n\nexport function isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nexport function isIE11OrLess() {\n  return isBrowser() && !!document.documentMode && document.documentMode <= 11;\n}\n\nexport function getUserAgent() {\n  return navigator.userAgent;\n}\n\nexport function isFingerprintSupported() {\n  const agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\t\n}\n\nexport function isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n  var isIE8or9 = document.documentMode && document.documentMode < 10;\n  if (window.postMessage && !isIE8or9) {\n    return true;\n  }\n  return false;\n}\n\nexport function isTokenVerifySupported() {\n  return typeof webcrypto !== 'undefined'\n    && webcrypto !== null\n    && typeof webcrypto.subtle !== 'undefined'\n    && typeof Uint8Array !== 'undefined';\n}\n\nexport function hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nexport function isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nexport function isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n  return window.location.protocol === 'https:';\n}\n\nexport function isLocalhost() {\n  // eslint-disable-next-line compat/compat\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\n","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateNonce, generateState } from './oauth';\nimport { OktaAuth, TokenParams } from '../../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultTokenParams(sdk: OktaAuth): TokenParams {\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    state,\n    ignoreSignature\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce,\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    ignoreSignature\n  });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuth } from '../../types';\nimport { OAuthError, AuthApiError } from '../../errors';\n\nexport function isInteractionRequiredError(error: Error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n  const oauthError = error as OAuthError;\n  return (oauthError.errorCode === 'interaction_required');\n}\n\nexport function isAuthorizationCodeError(sdk: OktaAuth, error: Error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n  const authApiError = error as AuthApiError;\n  // xhr property doesn't seem to match XMLHttpRequest type\n  const errorResponse = authApiError.xhr as unknown as Record<string, unknown>;\n  const responseJSON = errorResponse?.responseJSON as Record<string, unknown>;\n  return sdk.options.pkce && (responseJSON?.error as string === 'invalid_grant');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\n/* eslint-disable complexity, max-statements */\nimport { OktaAuth, OktaAuthOptions } from '../../types';\n\nexport function hasTokensInHash(hash: string): boolean {\n  return /((id|access)_token=)/i.test(hash);\n}\n\n// authorization_code\nexport function hasAuthorizationCode(hashOrSearch: string): boolean {\n  return /(code=)/i.test(hashOrSearch);\n}\n\n// interaction_code\nexport function hasInteractionCode(hashOrSearch: string): boolean {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nexport function hasErrorInUrl(hashOrSearch: string): boolean {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nexport function isRedirectUri(uri: string, sdk: OktaAuth): boolean {\n  var authParams = sdk.options;\n  return uri && uri.indexOf(authParams.redirectUri) === 0;\n}\n\nexport function isCodeFlow(options: OktaAuthOptions) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nexport function getHashOrSearch(options: OktaAuthOptions) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\n/**\n * Check if tokens or a code have been passed back into the url, which happens in\n * the OIDC (including social auth IDP) redirect flow.\n */\nexport function isLoginRedirect (sdk: OktaAuth) {\n  // First check, is this a redirect URI?\n  if (!isRedirectUri(window.location.href, sdk)){\n    return false;\n  }\n\n  // The location contains either a code, token, or an error + error_description\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode =  hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  // implicit flow, will always be hash fragment\n  return hasTokensInHash(window.location.hash);\n}\n\n/**\n * Check if error=interaction_required has been passed back in the url, which happens in\n * the social auth IDP redirect flow.\n */\nexport function isInteractionRequired (sdk: OktaAuth, hashOrSearch?: string) {\n  if (!hashOrSearch) { // web only\n    // First check, is this a redirect URI?\n    if (!isLoginRedirect(sdk)){\n      return false;\n    }\n  \n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown } from '../endpoints/well-known';\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuth, TokenParams } from '../../types';\nimport { clone } from '../../util';\nimport { getDefaultTokenParams } from './defaultTokenParams';\nimport { DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport pkce from './pkce';\n\n// Prepares params for a call to /authorize or /token\nexport function prepareTokenParams(sdk: OktaAuth, tokenParams?: TokenParams): Promise<TokenParams> {\n  // build params using defaults + options\n  const defaults = getDefaultTokenParams(sdk);\n  tokenParams = Object.assign({}, defaults, clone(tokenParams));\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return Promise.resolve(tokenParams);\n  }\n\n  // PKCE flow\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n    if (!sdk.features.isHTTPS()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n    if (!sdk.features.hasTextEncoder()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n    return Promise.reject(new AuthSdkError(errorMessage));\n  }\n\n  // set default code challenge method, if none provided\n  if (!tokenParams.codeChallengeMethod) {\n    tokenParams.codeChallengeMethod = DEFAULT_CODE_CHALLENGE_METHOD;\n  }\n\n  // responseType is forced\n  tokenParams.responseType = 'code';\n\n  return getWellKnown(sdk, null)\n    .then(function (res) {\n      var methods = res['code_challenge_methods_supported'] || [];\n      if (methods.indexOf(tokenParams.codeChallengeMethod) === -1) {\n        throw new AuthSdkError('Invalid code_challenge_method');\n      }\n    })\n    .then(function () {\n      if (!tokenParams.codeVerifier) {\n        tokenParams.codeVerifier = pkce.generateVerifier();\n      }\n      return pkce.computeChallenge(tokenParams.codeVerifier);\n    })\n    .then(function (codeChallenge) {\n      // Clone/copy the params. Set codeChallenge\n      var clonedParams = clone(tokenParams) || {};\n      Object.assign(clonedParams, tokenParams, {\n        codeChallenge: codeChallenge,\n      });\n      return clonedParams;\n    });\n}","import { RefreshToken } from '../../types';\nimport { isAuthApiError } from '../../errors';\n\nexport function isSameRefreshToken(a: RefreshToken, b: RefreshToken) {\n  return (a.refreshToken === b.refreshToken);\n}\n\nexport function isRefreshTokenError(err: Error) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n\n  const { responseJSON } = err.xhr;\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n\n  return false;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuth, TokenVerifyParams, UserClaims } from '../../types';\n\nexport function validateClaims(sdk: OktaAuth, claims: UserClaims, validationParams: TokenVerifyParams) {\n  var aud = validationParams.clientId;\n  var iss = validationParams.issuer;\n  var nonce = validationParams.nonce;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  var now = Math.floor(Date.now()/1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' +\n      'does not match [' + iss + ']');\n  }\n\n  if (claims.aud !== aud) {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' +\n      'does not match [' + aud + ']');\n  }\n\n  if (claims.iat > claims.exp) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if ((now - sdk.options.maxClockSkew) > claims.exp) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat > (now + sdk.options.maxClockSkew)) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport StorageManager from '../StorageManager';\nimport { CustomUrls } from './OktaAuthOptions';\nimport { FlowIdentifier } from '../idx/types';\nexport interface TransactionManagerOptions {\n  storageManager?: StorageManager;\n  enableSharedStorage?: boolean; // default true\n  legacyWidgetSupport?: boolean; // default true\n  saveNonceCookie?: boolean; // default true\n  saveStateCookie?: boolean; // default true\n  saveParamsCookie?: boolean; // default true\n}\n\nexport interface TransactionMetaOptions {\n  pkce?: boolean;\n  oauth?: boolean;\n  muteWarning?: boolean;\n  state?: string;\n}\n\n// formerly known as \"Redirect OAuth Params\"\nexport interface OAuthTransactionMeta {\n  issuer: string;\n  redirectUri: string;\n  state: string;\n  nonce: string;\n  responseType: string | string [];\n  scopes: string[];\n  clientId: string;\n  urls: CustomUrls;\n  ignoreSignature: boolean;\n  originalUri?: string;\n}\n\nexport interface PKCETransactionMeta extends OAuthTransactionMeta {\n  codeVerifier: string;\n  codeChallengeMethod: string;\n  codeChallenge: string;\n}\n\nexport interface IdxTransactionMeta extends PKCETransactionMeta {\n  interactionHandle?: string;\n  remediations?: string[];\n  flow?: FlowIdentifier;\n}\n\nexport type CustomAuthTransactionMeta = Record<string, string | undefined>;\n\nexport type TransactionMeta =\n  IdxTransactionMeta |\n  PKCETransactionMeta |\n  OAuthTransactionMeta |\n  CustomAuthTransactionMeta;\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isOAuthTransactionMeta(obj: any): obj is OAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nexport function isPKCETransactionMeta(obj: any): obj is PKCETransactionMeta {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).codeVerifier;\n}\n\nexport function isIdxTransactionMeta(obj: any): obj is IdxTransactionMeta {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).interactionHandle;\n}\n\nexport function isCustomAuthTransactionMeta(obj: any): obj is CustomAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  const isAllStringValues = Object.values(obj).find((value) => (typeof value !== 'string')) === undefined;\n  return isAllStringValues;\n}\n\nexport function isTransactionMeta(obj: any): obj is TransactionMeta {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { InteractOptions } from '../interact';\nimport { IntrospectOptions } from '../introspect';\nimport { APIError, Tokens } from '../../types';\nimport { IdxTransactionMeta } from '../../types/Transaction';\nimport { IdxAuthenticator, IdxMessage, IdxOption, IdxResponse } from './idx-js';\nimport { FlowIdentifier } from './FlowIdentifier';\n\nexport { IdxMessage } from './idx-js';\nexport { AuthenticationOptions } from '../authenticate';\nexport { RegistrationOptions } from '../register';\nexport { PasswordRecoveryOptions } from '../recoverPassword';\nexport { ProceedOptions } from '../proceed';\nexport { CancelOptions } from '../cancel';\nexport { FlowIdentifier };\n\nexport enum IdxStatus {\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  FAILURE = 'FAILURE',\n  TERMINAL = 'TERMINAL',\n  CANCELED = 'CANCELED',\n}\n\nexport enum AuthenticatorKey {\n  OKTA_PASSWORD = 'okta_password',\n  OKTA_EMAIL = 'okta_email',\n  OKTA_VERIFIER = 'okta_verifier',\n  PHONE_NUMBER = 'phone_number',\n  GOOGLE_AUTHENTICATOR = 'google_otp',\n}\n\nexport type Input = {\n  name: string;\n  type?: string;\n  label?: string;\n  value?: string;\n  secret?: boolean;\n  required?: boolean;\n}\n\nexport type NextStep = {\n  name: string;\n  authenticator?: IdxAuthenticator;\n  canSkip?: boolean;\n  canResend?: boolean;\n  inputs?: Input[];\n  options?: IdxOption[];\n}\n\nexport enum IdxFeature {\n  PASSWORD_RECOVERY,\n  REGISTRATION,\n  SOCIAL_IDP,\n}\n\nexport interface IdxTransaction {\n  status: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  _idxResponse?: IdxResponse; // Temporary for widget conversion. Will not be supported long-term. OKTA-418165\n}\n\nexport type IdxOptions = InteractOptions & IntrospectOptions & {\n  flow?: FlowIdentifier;\n};\n\nexport type Authenticator = {\n  key: string;\n  methodType?: string;\n  phoneNumber?: string;\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { UserClaims } from './UserClaims';\n\nexport interface AbstractToken {\n  expiresAt: number;\n  authorizeUrl: string;\n  scopes: string[];\n}\n\nexport interface AccessToken extends AbstractToken {\n  accessToken: string;\n  claims: UserClaims;\n  tokenType: string;\n  userinfoUrl: string;\n}\n\nexport interface RefreshToken extends AbstractToken {\n  refreshToken: string;\n  tokenUrl: string;\n  issuer: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\nexport interface IDToken extends AbstractToken {\n  idToken: string;\n  claims: UserClaims;\n  issuer: string;\n  clientId: string;\n}\n\nexport type Token = AccessToken | IDToken | RefreshToken;\nexport type RevocableToken = AccessToken | RefreshToken;\n\nexport type TokenType = 'accessToken' | 'idToken' | 'refreshToken';\n\nexport function isToken(obj: any): obj is Token {\n  if (obj &&\n      (obj.accessToken || obj.idToken || obj.refreshToken) &&\n      Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isAccessToken(obj: any): obj is AccessToken {\n  return obj && obj.accessToken;\n}\n\nexport function isIDToken(obj: any): obj is IDToken {\n  return obj && obj.idToken;\n}\n\nexport function isRefreshToken(obj: any): obj is RefreshToken {\n  return obj && obj.refreshToken;\n}\n\nexport interface Tokens {\n  accessToken?: AccessToken;\n  idToken?: IDToken;\n  refreshToken?: RefreshToken;\n}\n","/* eslint-disable complexity */\n\nimport { AuthSdkError } from '../../errors';\nimport { isAccessToken, isIDToken, isRefreshToken, Token, TokenType } from '../../types';\n\nexport function validateToken(token: Token, type?: TokenType) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError(\n      'Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property'\n    );\n  }\n  \n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  } \n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { JWTObject } from '../types';\nimport { base64UrlToString } from '../crypto';\n\nexport function decodeToken(token: string): JWTObject {\n  var jwt = token.split('.');\n  var decodedToken: JWTObject;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuth,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from '../types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport function revokeToken(sdk: OktaAuth, token: RevocableToken): Promise<any> {\n  return Promise.resolve()\n    .then(function () {\n      var accessToken: string;\n      var refreshToken: string;\n      if (token) { \n          accessToken = (token as AccessToken).accessToken;\n          refreshToken = (token as RefreshToken).refreshToken;  \n      }\n        \n      if(!accessToken && !refreshToken) { \n        throw new AuthSdkError('A valid access or refresh token object is required');\n      }\n      var clientId = sdk.options.clientId;\n      var clientSecret = sdk.options.clientSecret;\n      if (!clientId) {\n        throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n      }\n      var revokeUrl = getOAuthUrls(sdk).revokeUrl;\n      var args = toQueryString({\n        // eslint-disable-next-line camelcase\n        token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n        token: refreshToken || accessToken,\n      }).slice(1);\n      var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n      return post(sdk, revokeUrl, args, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': 'Basic ' + creds\n        }\n      });\n    });\n}","/* eslint-disable max-len */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getOAuthUrls } from '../oidc';\nimport { CustomUrls, OAuthResponse, OktaAuth, TokenParams, TokenResponse } from '../types';\nimport { getDefaultTokenParams } from './util';\nimport { clone } from '../util';\nimport { postToTokenEndpoint } from './endpoints/token';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\n// codeVerifier is required. May pass either an authorizationCode or interactionCode\nexport function exchangeCodeForTokens(sdk: OktaAuth, tokenParams: TokenParams, urls?: CustomUrls): Promise<TokenResponse> {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  // build params using defaults + options\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state\n  } = tokenParams;\n\n  var getTokenOptions = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n  };\n\n  return postToTokenEndpoint(sdk, getTokenOptions, urls)\n    .then((response: OAuthResponse) => {\n\n      // `handleOAuthResponse` hanadles responses from both `/authorize` and `/token` endpoints\n      // Here we modify the response from `/token` so that it more closely matches a response from `/authorize`\n      // `responseType` is used to validate that the expected tokens were returned\n      const responseType = ['token']; // an accessToken will always be returned\n      if (scopes.indexOf('openid') !== -1) {\n        responseType.push('id_token'); // an idToken will be returned if \"openid\" is in the scopes\n      }\n      const handleResponseOptions: TokenParams = {\n        clientId,\n        redirectUri,\n        scopes,\n        responseType,\n        ignoreSignature,\n      };\n      return handleOAuthResponse(sdk, handleResponseOptions, response, urls)\n        .then((response: TokenResponse) => {\n          // For compatibility, \"code\" is returned in the TokenResponse. OKTA-326091\n          response.code = authorizationCode;\n          response.state = state;\n          return response;\n        });\n    })\n    .finally(() => {\n      sdk.transactionManager.clear();\n    });\n}","/* eslint-disable max-len */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown, getKey } from './endpoints/well-known';\nimport { validateClaims } from './util';\nimport { AuthSdkError } from '../errors';\nimport { IDToken, OktaAuth, TokenVerifyParams } from '../types';\nimport { decodeToken } from './decodeToken';\nimport * as sdkCrypto from '../crypto';\n\n// Verify the id token\nexport async function verifyToken(sdk: OktaAuth, token: IDToken, validationParams: TokenVerifyParams): Promise<IDToken> {\n  if (!token || !token.idToken) {\n    throw new AuthSdkError('Only idTokens may be verified');\n  }\n\n  // Decode the Jwt object (may throw)\n  var jwt = decodeToken(token.idToken);\n\n  // The configured issuer may point to a frontend proxy.\n  // Get the \"real\" issuer from .well-known/openid-configuration\n  const configuredIssuer = validationParams?.issuer || sdk.options.issuer;\n  const { issuer } = await getWellKnown(sdk, configuredIssuer);\n\n  var validationOptions: TokenVerifyParams = Object.assign({\n    // base options, can be overridden by params\n    clientId: sdk.options.clientId,\n    ignoreSignature: sdk.options.ignoreSignature\n  }, validationParams, {\n    // final options, cannot be overridden\n    issuer\n  });\n\n  // Standard claim validation (may throw)\n  validateClaims(sdk, jwt.payload, validationOptions);\n\n  // If the browser doesn't support native crypto or we choose not\n  // to verify the signature, bail early\n  if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n    return token;\n  }\n\n  const key = await getKey(sdk, token.issuer, jwt.header.kid);\n  const valid = await sdkCrypto.verifyToken(token.idToken, key);\n  if (!valid) {\n    throw new AuthSdkError('The token signature is not valid');\n  }\n  if (validationParams && validationParams.accessToken && token.claims.at_hash) {\n    const hash = await sdkCrypto.getOidcHash(validationParams.accessToken);\n    if (hash !== token.claims.at_hash) {\n      throw new AuthSdkError('Token hash verification failed');\n    }\n  }\n  return token;\n}\n","\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { clone } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport {\n  OktaAuth,\n  TokenVerifyParams,\n  IDToken,\n  OAuthResponse,\n  TokenParams,\n  TokenResponse,\n  CustomUrls,\n  Tokens,\n} from '../types';\nimport { exchangeCodeForTokens } from './exchangeCodeForTokens';\nimport { verifyToken } from './verifyToken';\nimport { getDefaultTokenParams } from '.';\n\nfunction validateResponse(res: OAuthResponse, oauthParams: TokenParams) {\n  if (res['error'] || res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\n\n// eslint-disable-next-line max-len\nexport function handleOAuthResponse(sdk: OktaAuth, tokenParams: TokenParams, res: OAuthResponse, urls: CustomUrls): Promise<TokenResponse> {\n  var pkce = sdk.options.pkce !== false;\n\n  // The result contains an authorization_code and PKCE is enabled \n  // `exchangeCodeForTokens` will call /token then call `handleOauthResponse` recursively with the result\n  if (pkce && (res.code || res.interaction_code)) {\n    return exchangeCodeForTokens(sdk, Object.assign({}, tokenParams, {\n      authorizationCode: res.code,\n      interactionCode: res.interaction_code\n    }), urls);\n  }\n\n  tokenParams = tokenParams || getDefaultTokenParams(sdk);\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n\n  var responseType = tokenParams.responseType;\n  if (!Array.isArray(responseType)) {\n    responseType = [responseType];\n  }\n\n  var scopes;\n  if (res.scope) {\n    scopes = res.scope.split(' ');\n  } else {\n    scopes = clone(tokenParams.scopes);\n  }\n  var clientId = tokenParams.clientId || sdk.options.clientId;\n\n  // Handling the result from implicit flow or PKCE token exchange\n  return Promise.resolve()\n    .then(function () {\n      validateResponse(res, tokenParams);\n    }).then(function () {\n      var tokenDict = {} as Tokens;\n      var expiresIn = res.expires_in;\n      var tokenType = res.token_type;\n      var accessToken = res.access_token;\n      var idToken = res.id_token;\n      var refreshToken = res.refresh_token;\n      var now = Math.floor(Date.now()/1000);\n\n      if (accessToken) {\n        var accessJwt = sdk.token.decode(accessToken);\n        tokenDict.accessToken = {\n          accessToken: accessToken,\n          claims: accessJwt.payload,\n          expiresAt: Number(expiresIn) + now,\n          tokenType: tokenType,\n          scopes: scopes,\n          authorizeUrl: urls.authorizeUrl,\n          userinfoUrl: urls.userinfoUrl\n        };\n      }\n\n      if (refreshToken) {\n        tokenDict.refreshToken = {\n          refreshToken: refreshToken,\n          // should not be used, this is the accessToken expire time\n          // TODO: remove \"expiresAt\" in the next major version OKTA-407224\n          expiresAt: Number(expiresIn) + now, \n          scopes: scopes,\n          tokenUrl: urls.tokenUrl,\n          authorizeUrl: urls.authorizeUrl,\n          issuer: urls.issuer,\n        };\n      }\n\n      if (idToken) {\n        var idJwt = sdk.token.decode(idToken);\n\n        var idTokenObj: IDToken = {\n          idToken: idToken,\n          claims: idJwt.payload,\n          expiresAt: idJwt.payload.exp - idJwt.payload.iat + now, // adjusting expiresAt to be in local time\n          scopes: scopes,\n          authorizeUrl: urls.authorizeUrl,\n          issuer: urls.issuer,\n          clientId: clientId\n        };\n\n        var validationParams: TokenVerifyParams = {\n          clientId: clientId,\n          issuer: urls.issuer,\n          nonce: tokenParams.nonce,\n          accessToken: accessToken\n        };\n\n        if (tokenParams.ignoreSignature !== undefined) {\n          validationParams.ignoreSignature = tokenParams.ignoreSignature;\n        }\n\n        return verifyToken(sdk, idTokenObj, validationParams)\n          .then(function () {\n            tokenDict.idToken = idTokenObj;\n            return tokenDict;\n          });\n      }\n\n      return tokenDict;\n    })\n    .then(function (tokenDict): TokenResponse {\n      // Validate received tokens against requested response types \n      if (responseType.indexOf('token') !== -1 && !tokenDict.accessToken) {\n        // eslint-disable-next-line max-len\n        throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n      }\n      if (responseType.indexOf('id_token') !== -1 && !tokenDict.idToken) {\n        // eslint-disable-next-line max-len\n        throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n      }\n\n      return {\n        tokens: tokenDict,\n        state: res.state,\n        code: res.code\n      };\n    });\n}","\n/* global document */\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n  getOAuthUrls,\n  loadFrame,\n} from './util';\n\nimport AuthSdkError from '../errors/AuthSdkError';\n\nimport {\n  OktaAuth,\n  TokenParams,\n  PopupParams,\n} from '../types';\n\nimport { prepareTokenParams } from './util/prepareTokenParams';\nimport { buildAuthorizeParams } from './endpoints/authorize';\nimport { addPostMessageListener } from './util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nexport function getToken(sdk: OktaAuth, options: TokenParams & PopupParams) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n\n  // window object cannot be serialized, save for later use\n  // TODO: move popup related params into a separate options object\n  const popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n\n      // Start overriding any options that don't make sense\n      var sessionTokenOverrides = {\n        prompt: 'none',\n        responseMode: 'okta_post_message',\n        display: null\n      };\n\n      var idpOverrides = {\n        display: 'popup'\n      };\n\n      if (options.sessionToken) {\n        Object.assign(tokenParams, sessionTokenOverrides);\n      } else if (options.idp) {\n        Object.assign(tokenParams, idpOverrides);\n      }\n\n      // Use the query params to build the authorize url\n      var requestUrl,\n        endpoint,\n        urls;\n\n      // Get authorizeUrl and issuer\n      urls = getOAuthUrls(sdk, tokenParams);\n      endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n\n      // Determine the flow type\n      var flowType;\n      if (tokenParams.sessionToken || tokenParams.display === null) {\n        flowType = 'IFRAME';\n      } else if (tokenParams.display === 'popup') {\n        flowType = 'POPUP';\n      } else {\n        flowType = 'IMPLICIT';\n      }\n\n      // Execute the flow type\n      switch (flowType) {\n        case 'IFRAME':\n          var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          var iframeEl = loadFrame(requestUrl);\n          return iframePromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res, urls);\n            })\n            .finally(function () {\n              if (document.body.contains(iframeEl)) {\n                iframeEl.parentElement.removeChild(iframeEl);\n              }\n            });\n\n        case 'POPUP':\n          var oauthPromise; // resolves with OAuth response\n\n          // Add listener on postMessage before window creation, so\n          // postMessage isn't triggered before we're listening\n          if (tokenParams.responseMode === 'okta_post_message') {\n            if (!sdk.features.isPopupPostMessageSupported()) {\n              throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n            }\n            oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          }\n\n          // Redirect for authorization\n          // popupWindown can be null when popup is blocked\n          if (popupWindow) { \n            popupWindow.location.assign(requestUrl);\n          }\n\n          // The popup may be closed without receiving an OAuth response. Setup a poller to monitor the window.\n          var popupPromise = new Promise(function (resolve, reject) {\n            var closePoller = setInterval(function () {\n              if (!popupWindow || popupWindow.closed) {\n                clearInterval(closePoller);\n                reject(new AuthSdkError('Unable to parse OAuth flow response'));\n              }\n            }, 100);\n\n            // Proxy the OAuth promise results\n            oauthPromise\n              .then(function (res) {\n                clearInterval(closePoller);\n                resolve(res);\n              })\n              .catch(function (err) {\n                clearInterval(closePoller);\n                reject(err);\n              });\n          });\n\n          return popupPromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res, urls);\n            })\n            .finally(function () {\n              if (popupWindow && !popupWindow.closed) {\n                popupWindow.close();\n              }\n            });\n\n        default:\n          throw new AuthSdkError('The full page redirect flow is not supported');\n      }\n    });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuth, TokenParams, TokenResponse } from '../types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\n\nexport function getWithoutPrompt(sdk: OktaAuth, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n  \n  options = clone(options) || {};\n  Object.assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { getOAuthUrls } from './util/oauth';\nimport { isSameRefreshToken } from './util/refreshToken';\nimport { OktaAuth, TokenParams, RefreshToken, Tokens } from '../types';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { postRefreshToken } from './endpoints/token';\n\nexport async function renewTokensWithRefresh(\n  sdk: OktaAuth,\n  tokenParams: TokenParams,\n  refreshTokenObject: RefreshToken\n): Promise<Tokens> {\n  const { clientId } = sdk.options;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n  }\n\n  const renewTokenParams: TokenParams = Object.assign({}, tokenParams, {\n    clientId,\n  });\n  const tokenResponse = await postRefreshToken(sdk, renewTokenParams, refreshTokenObject);\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const { tokens } = await handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n\n  // Support rotating refresh tokens\n  const { refreshToken } = tokens;\n  if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n    sdk.tokenManager.updateRefreshToken(refreshToken);\n  }\n\n  return tokens;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuth, Token, Tokens, isAccessToken, AccessToken, IDToken, isIDToken } from '../types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\n\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError(\n    'Renew must be passed a token with an array of scopes and an accessToken or idToken'\n  );\n}\n\n// Multiple tokens may have come back. Return only the token which was requested.\nfunction getSingleToken(originalToken: Token, tokens: Tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\nexport async function renewToken(sdk: OktaAuth, token: Token): Promise<Token> {\n  if (!isIDToken(token) && !isAccessToken(token)) {\n    throwInvalidTokenError();\n  }\n\n  let tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    tokens = await renewTokensWithRefresh(sdk, {\n      scopes: token.scopes,\n    }, tokens.refreshToken);\n    return getSingleToken(token, tokens);\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (isAccessToken(token)) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  const { scopes, authorizeUrl, userinfoUrl, issuer } = token as (AccessToken & IDToken);\n  return getWithoutPrompt(sdk, {\n    responseType,\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  })\n    .then(function (res) {\n      return getSingleToken(token, res.tokens);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { TokenParams, Tokens } from '../types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\nimport { getDefaultTokenParams } from './util';\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\n// eslint-disable-next-line complexity\nexport async function renewTokens(sdk, options: TokenParams): Promise<Tokens> {\n  const tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    return renewTokensWithRefresh(sdk, options, tokens.refreshToken);\n  }\n\n  if (!tokens.accessToken && !tokens.idToken) {\n    throw new AuthSdkError('renewTokens() was called but there is no existing token');\n  }\n\n  const accessToken = tokens.accessToken || {};\n  const idToken = tokens.idToken || {};\n  const scopes = accessToken.scopes || idToken.scopes;\n  if (!scopes) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n  }\n  const authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n  if (!authorizeUrl) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n  }\n  const userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n  const issuer = idToken.issuer || sdk.options.issuer;\n\n  // Get tokens using the SSO cookie\n  options = Object.assign({\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  }, options);\n\n  if (sdk.options.pkce) {\n    options.responseType = 'code';\n  } else {\n    const { responseType } = getDefaultTokenParams(sdk);\n    options.responseType = responseType;\n  }\n\n  return getWithoutPrompt(sdk, options)\n    .then(res => res.tokens);\n    \n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { isFunction } from '../util';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { httpRequest } from '../http';\nimport { AccessToken, IDToken, UserClaims, isAccessToken, isIDToken } from '../types';\n\nexport async function getUserInfo(sdk, accessTokenObject: AccessToken, idTokenObject: IDToken): Promise<UserClaims> {\n  // If token objects were not passed, attempt to read from the TokenManager\n  if (!accessTokenObject) {\n    accessTokenObject = (await sdk.tokenManager.getTokens()).accessToken as AccessToken;\n  }\n  if (!idTokenObject) {\n    idTokenObject = (await sdk.tokenManager.getTokens()).idToken as IDToken;\n  }\n\n  if (!accessTokenObject || !isAccessToken(accessTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n\n  if (!idTokenObject || !isIDToken(idTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an ID token object'));\n  }\n\n  return httpRequest(sdk, {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  })\n    .then(userInfo => {\n      // Only return the userinfo response if subjects match to mitigate token substitution attacks\n      if (userInfo.sub === idTokenObject.claims.sub) {\n        return userInfo;\n      }\n      return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n    })\n    .catch(function (err) {\n      if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n        var authenticateHeader;\n        if (err.xhr.headers && isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n          authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n        } else if (isFunction(err.xhr.getResponseHeader)) {\n          authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n        }\n        if (authenticateHeader) {\n          var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n          var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n          var error = errorMatches[1];\n          var errorDescription = errorDescriptionMatches[1];\n          if (error && errorDescription) {\n            err = new OAuthError(error, errorDescription);\n          }\n        }\n      }\n      throw err;\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuth, TokenParams, TokenResponse } from '../types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\nimport { loadPopup } from './util';\n\nexport function getWithPopup(sdk: OktaAuth, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow\n  });\n  return getToken(sdk, options);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuth, TokenParams, TransactionMeta } from '../types';\nimport { clone } from '../util';\nimport { getOAuthUrls, prepareTokenParams } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport function getWithRedirect(sdk: OktaAuth, options: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n      const urls = getOAuthUrls(sdk, options);\n      const requestUrl = urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n      const issuer = sdk.options.issuer;\n\n      // Gather the values we want to save in the transaction\n      const {\n        responseType,\n        state,\n        nonce,\n        scopes,\n        clientId,\n        ignoreSignature,\n        redirectUri,\n        codeVerifier,\n        codeChallenge,\n        codeChallengeMethod,\n      } = tokenParams;\n\n      const oauthMeta: TransactionMeta = {\n        issuer,\n        responseType,\n        state,\n        nonce,\n        scopes,\n        clientId,\n        urls,\n        ignoreSignature,\n        redirectUri,\n        codeVerifier,\n        codeChallenge,\n        codeChallengeMethod\n      };\n\n      sdk.transactionManager.save(oauthMeta, { oauth: true });\n      sdk.token.getWithRedirect._setLocation(requestUrl);\n    });\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { isInteractionRequiredError, urlParamsToObject } from './util';\nimport {\n  ParseFromUrlOptions,\n  TokenResponse,\n  CustomUrls,\n  TransactionMeta,\n  OAuthResponse\n} from '../types';\nimport { isString } from '../util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nexport function getResponseMode(sdk): 'query' | 'fragment' {\n  // https://openid.net/specs/openid-connect-core-1_0.html#Authentication\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nexport function parseOAuthResponseFromUrl(sdk, options: string | ParseFromUrlOptions): OAuthResponse {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nexport function cleanOAuthResponseFromUrl(sdk, options: ParseFromUrlOptions) {\n  // Clean hash or search from the url\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nexport async function parseFromUrl(sdk, options: string | ParseFromUrlOptions): Promise<TokenResponse> {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  const res: OAuthResponse = parseOAuthResponseFromUrl(sdk, options);\n  const state = res.state;\n  const oauthParams: TransactionMeta = sdk.transactionManager.load({\n    oauth: true,\n    pkce: sdk.options.pkce,\n    state\n  });\n  if (!oauthParams) {\n    return Promise.reject(new AuthSdkError('Unable to retrieve OAuth redirect params from storage'));\n  }\n  const urls: CustomUrls = oauthParams.urls as CustomUrls;\n  delete oauthParams.urls;\n\n  if (!options.url) {\n    // Clean hash or search from the url\n    cleanOAuthResponseFromUrl(sdk, options);\n  }\n\n  return handleOAuthResponse(sdk, oauthParams, res, urls)\n    .catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    })\n    .then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  StorageProvider,\n  StorageOptions,\n  PKCEStorage,\n  CookieOptions,\n  SimpleStorage,\n  StorageType,\n  BrowserStorageUtil,\n  CookieStorage\n} from '../types';\nimport { warn } from '../util';\n\nconst Cookies = require('js-cookie');\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil: BrowserStorageUtil = {\n\n  // These are shimmed in `OktaAuthBase.ts`\n  getHttpCache(): StorageProvider {\n    return null;\n  },\n\n  getPKCEStorage(): PKCEStorage {\n    return null;\n  },\n\n  // IE11 bug that Microsoft doesn't plan to fix\n  // https://connect.microsoft.com/IE/Feedback/Details/1496040\n  browserHasLocalStorage: function() {\n    try {\n      var storage = storageUtil.getLocalStorage();\n      return storageUtil.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  browserHasSessionStorage: function() {\n    try {\n      var storage = storageUtil.getSessionStorage();\n      return storageUtil.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  testStorageType: function(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = storageUtil.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = storageUtil.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n\n  getStorageByType: function(storageType: StorageType, options: StorageOptions): SimpleStorage {\n    let storageProvider = null;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = storageUtil.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = storageUtil.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = storageUtil.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = storageUtil.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  },\n\n  findStorageType: function(types: StorageType[]) {\n    let curType;\n    let nextType;\n    \n    types = types.slice(); // copy array\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n\n    if (storageUtil.testStorageType(curType)) {\n      return curType;\n    }\n\n    // preferred type was unsupported.\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n\n    // fallback to the next type. this is a recursive call\n    return storageUtil.findStorageType(types);\n  },\n\n  getLocalStorage: function() {\n    return localStorage;\n  },\n\n  getSessionStorage: function() {\n    return sessionStorage;\n  },\n\n  // Provides webStorage-like interface for cookies\n  getCookieStorage: function(options): CookieStorage {\n    const secure = options.secure;\n    const sameSite = options.sameSite;\n    const sessionCookie = options.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage: CookieStorage = {\n      getItem: storageUtil.storage.get,\n      setItem: function(key, value, expiresAt = '2200-01-01T00:00:00.000Z') {\n        // By defauilt, cookie shouldn't expire\n        expiresAt = sessionCookie ? null : expiresAt;\n        storageUtil.storage.set(key, value, expiresAt, {\n          secure: secure, \n          sameSite: sameSite,\n        });\n      },\n      removeItem: function(key) {\n        storageUtil.storage.delete(key);\n      }\n    };\n\n    if (!options.useMultipleCookies) {\n      return storage;\n    }\n\n    // options.useMultipleCookies - because cookies have size limits.\n    // Can only be used when storing an object value. Object properties will be saved to separate cookies.\n    //  Each property of the object must also be an object.\n    return {\n      getItem: function(key) {\n        var data = storage.getItem(); // read all cookies\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key) === 0) { // filter out unrelated cookies\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]); // populate with cookie dataa\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        // Set key-value pairs from input to cookies\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        // Delete unmatched keys from existing cookies\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      }\n    };\n  },\n\n  // Provides an in-memory solution\n  inMemoryStore: {},\n  getInMemoryStorage: function() {\n    return {\n      getItem: (key) => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      }\n    };\n  },\n\n  testStorage: function(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  storage: {\n    set: function(name: string, value: string, expiresAt: string, options: CookieOptions): string {\n      const { sameSite, secure } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions: CookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!(Date.parse(expiresAt))) {\n        // Expires value can be converted to a Date object.\n        //\n        // If the 'expiresAt' value is not provided, or the value cannot be\n        // parsed as a Date object, the cookie will set as a session cookie.\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return storageUtil.storage.get(name);\n    },\n\n    get: function(name: string): string {\n      return Cookies.get(name);\n    },\n\n    delete: function(name: string): string {\n      return Cookies.remove(name, { path: '/' });\n    }\n  }\n};\n\nexport default storageUtil;\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { OktaAuthOptions } from './types';\n\n// TODO: use @okta/configuration-validation (move module to this monorepo?)\n// eslint-disable-next-line complexity\nfunction assertValidConfig(args: OktaAuthOptions) {\n  args = args || {};\n\n  var scopes = args.scopes;\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' +\n      'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n\n  var issuer = args.issuer;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(args.issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\n\nfunction getUserAgent(args: OktaAuthOptions, sdkValue: string): string {\n  var userAgent = args.userAgent || {};\n\n  if (userAgent.value) {\n    return userAgent.value;\n  }\n\n  if (userAgent.template) {\n    return userAgent.template.replace('$OKTA_AUTH_JS', sdkValue);\n  }\n\n  return sdkValue;\n}\n\nexport {\n  assertValidConfig,\n  getUserAgent\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global window */\nimport { TokenManager, EVENT_EXPIRED } from '../TokenManager';\nimport { AuthSdkError } from '../errors';\nimport { isBrowser } from '../features';\nimport { TokenManagerOptions } from '../types';\n\nfunction shouldThrottleRenew(renewTimeQueue) {\n  let res = false;\n  renewTimeQueue.push(Date.now());\n  if (renewTimeQueue.length >= 10) {\n    // get and remove first item from queue\n    const firstTime = renewTimeQueue.shift();\n    const lastTime = renewTimeQueue[renewTimeQueue.length - 1];\n    res = lastTime - firstTime < 30 * 1000;\n  }\n  return res;\n}\n\nexport class TokenService {\n  private tokenManager: TokenManager;\n  private options: TokenManagerOptions;\n  private storageListener: (event: StorageEvent) => void;\n  private onTokenExpiredHandler: (key: string) => void;\n  private syncTimeout: unknown;\n\n  constructor(tokenManager: TokenManager, options: TokenManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n  }\n\n  start() {\n    const renewTimeQueue = [];\n    this.onTokenExpiredHandler = (key) => {\n      if (this.options.autoRenew) {\n        if (shouldThrottleRenew(renewTimeQueue)) {\n          const error = new AuthSdkError('Too many token renew requests');\n          this.tokenManager.emitError(error);\n        } else {\n          this.tokenManager.renew(key).catch(() => {}); // Renew errors will emit an \"error\" event \n        }\n      } else if (this.options.autoRemove) {\n        this.tokenManager.remove(key);\n      }\n    };\n    this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n\n    this.tokenManager.setExpireEventTimeoutAll();\n\n    if (this.options.syncStorage && isBrowser()) {\n      // Sync authState cross multiple tabs when localStorage is used as the storageProvider\n      // A StorageEvent is sent to a window when a storage area it has access to is changed \n      // within the context of another document.\n      // https://developer.mozilla.org/en-US/docs/Web/API/StorageEvent\n\n      this.storageListener = ({ key, newValue, oldValue }: StorageEvent) => {\n        const handleCrossTabsStorageChange = () => {\n          this.tokenManager.resetExpireEventTimeoutAll();\n          this.tokenManager.emitEventsForCrossTabsStorageUpdate(newValue, oldValue);\n        };\n\n        // Skip if:\n        // not from localStorage.clear (event.key is null)\n        // event.key is not the storageKey\n        // oldValue === newValue\n        if (key && (key !== this.options.storageKey || newValue === oldValue)) {\n          return;\n        }\n\n        // LocalStorage cross tabs update is not synced in IE, set a 1s timer by default to read latest value\n        // https://stackoverflow.com/questions/24077117/localstorage-in-win8-1-ie11-does-not-synchronize\n        this.syncTimeout = setTimeout(() => handleCrossTabsStorageChange(), this.options._storageEventDelay);\n      };\n\n      window.addEventListener('storage', this.storageListener);\n    }\n  }\n\n  stop() {\n    this.tokenManager.clearExpireEventTimeoutAll();\n    this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n    if (this.options.syncStorage && isBrowser()) {\n      window.removeEventListener('storage', this.storageListener);\n      clearTimeout(this.syncTimeout as any);\n    }\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, clone } from './util';\nimport { AuthSdkError } from './errors';\nimport { isRefreshTokenError, validateToken  } from './oidc/util';\nimport { isLocalhost, isIE11OrLess } from './features';\nimport { TOKEN_STORAGE_NAME } from './constants';\nimport SdkClock from './clock';\nimport {\n  EventEmitter,\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  StorageOptions,\n  StorageType,\n  OktaAuth,\n  StorageProvider,\n  TokenManagerErrorEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken\n} from './types';\nimport { REFRESH_TOKEN_STORAGE_KEY } from './constants';\nimport { TokenService } from './services/TokenService';\n\nconst DEFAULT_OPTIONS = {\n  autoRenew: true,\n  autoRemove: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME,\n  syncStorage: true,\n  _storageEventDelay: 0\n};\nexport const EVENT_EXPIRED = 'expired';\nexport const EVENT_RENEWED = 'renewed';\nexport const EVENT_ADDED = 'added';\nexport const EVENT_REMOVED = 'removed';\nexport const EVENT_ERROR = 'error';\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Promise<Token>;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuth;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n  private service: TokenService;\n\n  on: (event: string, handler: TokenManagerErrorEventHandler | TokenManagerEventHandler, context?: object) => void;\n  off: (event: string, handler?: TokenManagerErrorEventHandler | TokenManagerEventHandler) => void;\n\n  constructor(sdk: OktaAuth, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n\n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (isIE11OrLess()) {\n      options._storageEventDelay = options._storageEventDelay || 1000;\n    }\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage(storageOptions);\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n\n    this.on = this.emitter.on.bind(this.emitter);\n    this.off = this.emitter.off.bind(this.emitter);\n  }\n\n  start() {\n    if (this.service) {\n      this.stop();\n    }\n    this.service = new TokenService(this, this.getOptions());\n    this.service.start();\n  }\n  \n  stop() {\n    if (this.service) {\n      this.service.stop();\n      this.service = null;\n    }\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    var expireTime = token.expiresAt - this.options.expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  emitEventsForCrossTabsStorageUpdate(newValue, oldValue) {\n    const oldTokens = this.getTokensFromStorageValue(oldValue);\n    const newTokens = this.getTokensFromStorageValue(newValue);\n    Object.keys(newTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (JSON.stringify(oldToken) !== JSON.stringify(newToken)) {\n        this.emitAdded(key, newToken);\n      }\n    });\n    Object.keys(oldTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (!newToken) {\n        this.emitRemoved(key, oldToken);\n      }\n    });\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    this.state.renewPromise = null;\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key) {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key) {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  private getTokenType(token: Token): TokenType {\n    if (isAccessToken(token)) {\n      return 'accessToken';\n    }\n    if (isIDToken(token)) {\n      return 'idToken';\n    }\n    if(isRefreshToken(token)) {\n      return 'refreshToken';\n    }\n    throw new AuthSdkError('Unknown token type');\n  }\n\n  setTokens(\n    tokens: Tokens,\n    // TODO: callbacks can be removed in the next major version OKTA-407224\n    accessTokenCb?: Function, \n    idTokenCb?: Function,\n    refreshTokenCb?: Function\n  ): void {\n    const handleTokenCallback = (key, token) => {\n      const type = this.getTokenType(token);\n      if (type === 'accessToken') {\n        accessTokenCb && accessTokenCb(key, token);\n      } else if (type === 'idToken') {\n        idTokenCb && idTokenCb(key, token);\n      } else if (type === 'refreshToken') {\n        refreshTokenCb && refreshTokenCb(key, token);\n      }\n    };\n    const handleAdded = (key, token) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRenewed = (key, token, oldToken) => {\n      this.emitRenewed(key, token, oldToken);\n      this.clearExpireEventTimeout(key);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRemoved = (key, token) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      handleTokenCallback(key, token);\n    };\n    \n    const types: TokenType[] = ['idToken', 'accessToken', 'refreshToken'];\n    const existingTokens = this.getTokensSync();\n\n    // valid tokens\n    types.forEach((type) => {\n      const token = tokens[type];\n      if (token) {\n        validateToken(token, type);\n      }\n    });\n  \n    // add token to storage\n    const storage = types.reduce((storage, type) => {\n      const token = tokens[type];\n      if (token) {\n        const storageKey = this.getStorageKeyByType(type) || type;\n        storage[storageKey] = token;\n      }\n      return storage;\n    }, {});\n    this.storage.setStorage(storage);\n  \n    // emit event and start expiration timer\n    types.forEach(type => {\n      const newToken = tokens[type];\n      const existingToken = existingTokens[type];\n      const storageKey = this.getStorageKeyByType(type) || type;\n      if (newToken && existingToken) { // renew\n        // call handleRemoved first, since it clears timers\n        handleRemoved(storageKey, existingToken);\n        handleAdded(storageKey, newToken);\n        handleRenewed(storageKey, newToken, existingToken);\n      } else if (newToken) { // add\n        handleAdded(storageKey, newToken);\n      } else if (existingToken) { //remove\n        handleRemoved(storageKey, existingToken);\n      }\n    });\n  }\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  // TODO: renew method should take no param, change in the next major version OKTA-407224\n  renew(key): Promise<Token> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    if (this.state.renewPromise) {\n      return this.state.renewPromise;\n    }\n  \n    try {\n      var token = this.getSync(key);\n      if (!token) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  \n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    this.state.renewPromise = this.sdk.token.renewTokens()\n      .then(tokens => {\n        this.setTokens(tokens);\n\n        // resolve token based on the key\n        const tokenType = this.getTokenType(token);\n        return tokens[tokenType];\n      })\n      .catch(err => {\n        // If renew fails, remove token and emit error\n        if (isRefreshTokenError(err) || err.name === 'OAuthError' || err.name === 'AuthSdkError') {\n          // remove token from storage\n          this.remove(key);\n          \n          err.tokenKey = key;\n          this.emitError(err);\n        }\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        this.state.renewPromise = null;\n      });\n  \n    return this.state.renewPromise;\n  }\n  \n  clear() {\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n  }\n  \n  getTokensFromStorageValue(value) {\n    let tokens;\n    try {\n      tokens = JSON.parse(value) || {};\n    } catch (e) {\n      tokens = {};\n    }\n    return tokens;\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n  }\n  \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise } from './util';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\nclass PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n\n  constructor() {\n    this.queue = [];\n    this.running = false;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: () => void, thisObject: object, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    var queueItem = this.queue.shift();\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args);\n    if (isPromise(res)) {\n      res.then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n\nexport default PromiseQueue;","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuth } from '../types';\nimport { AuthSdkError } from '../errors';\nimport { isFingerprintSupported } from '../features';\nimport {\n  addListener,\n  removeListener\n} from '../oidc';\nimport { FingerprintOptions } from '../types';\n\nexport default function fingerprint(sdk: OktaAuth, options: FingerprintOptions) {\n  options = options || {};\n\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  var timeout;\n  var iframe;\n  var listener;\n  var promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    // eslint-disable-next-line complexity\n    listener = function listener(e) {\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      try {\n        var msg = JSON.parse(e.data);\n      } catch (err) {\n        // iframe messages should all be parsable\n        // skip not parsable messages come from other sources in same origin (browser extensions)\n        // TODO: add namespace flag in okta-core to distinguish messages that come from other sources\n        return;\n      }\n\n      if (!msg) { return; }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint);\n      }\n      if (msg.type === 'FingerprintServiceReady') {\n        e.source.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      }\n    };\n    addListener(window, 'message', listener);\n\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    document.body.appendChild(iframe);\n\n    timeout = setTimeout(function() {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options.timeout || 15000);\n  });\n\n  return promise.finally(function() {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (document.body.contains(iframe)) {\n      iframe.parentElement.removeChild(iframe);\n    }\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from './errors';\nimport { AuthState, AuthStateLogOptions } from './types';\nimport { OktaAuth } from '.';\nimport { getConsole } from './util';\nimport { EVENT_ADDED, EVENT_REMOVED } from './TokenManager';\nconst PCancelable = require('p-cancelable');\n\nexport const INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\n\n// only compare first level of authState\nconst isSameAuthState = (prevState: AuthState, state: AuthState) => {\n  // initial state is null\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated \n    && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n    && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n    && prevState.error === state.error;\n};\n\nexport class AuthStateManager {\n  _sdk: OktaAuth;\n  _pending: { \n    updateAuthStatePromise: typeof PCancelable;\n    canceledTimes: number; \n  };\n  _authState: AuthState | null;\n  _prevAuthState: AuthState | null;\n  _logOptions: AuthStateLogOptions;\n  _lastEventTimestamp: number;\n\n  constructor(sdk: OktaAuth) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = { ...DEFAULT_PENDING };\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n\n    // Listen on tokenManager events to start updateState process\n    // \"added\" event is emitted in both add and renew process\n    // Only listen on \"added\" event to update auth state\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({ event: EVENT_ADDED, key, token });\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({ event: EVENT_REMOVED, key, token });\n      this.updateAuthState();\n    });\n  }\n\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n\n  getAuthState(): AuthState | null {\n    return this._authState;\n  }\n\n  getPreviousAuthState(): AuthState | null {\n    return this._prevAuthState;\n  }\n\n  async updateAuthState(): Promise<AuthState> {\n    const { transformAuthState, devMode } = this._sdk.options;\n\n    const log = (status) => {\n      const { event, key, token } = this._logOptions;\n      getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n      getConsole().log(key, token);\n      getConsole().log('Current authState', this._authState);\n      getConsole().groupEnd();\n      \n      // clear log options after logging\n      this._logOptions = {};\n    };\n\n    const emitAuthStateChange = (authState) => {\n      if (isSameAuthState(this._authState, authState)) {\n        devMode && log('unchanged'); \n        return;\n      }\n      this._prevAuthState = this._authState;\n      this._authState = authState;\n      // emit new authState object\n      this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, { ...authState });\n      devMode && log('emitted');\n    };\n\n    const finalPromise = (origPromise) => {       \n      return this._pending.updateAuthStatePromise.then(() => {\n        const curPromise = this._pending.updateAuthStatePromise;\n        if (curPromise && curPromise !== origPromise) {\n          return finalPromise(curPromise);\n        }\n        return this.getAuthState();\n      });\n    };\n\n    if (this._pending.updateAuthStatePromise) {\n      if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n        // stop canceling then starting a new promise\n        // let existing promise finish to prevent running into loops\n        devMode && log('terminated');\n        return finalPromise(this._pending.updateAuthStatePromise);\n      } else {\n        this._pending.updateAuthStatePromise.cancel();\n      }\n    }\n\n    /* eslint-disable complexity */\n    const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n      onCancel.shouldReject = false;\n      onCancel(() => {\n        this._pending.updateAuthStatePromise = null;\n        this._pending.canceledTimes = this._pending.canceledTimes + 1;\n        devMode && log('canceled');\n      });\n\n      const emitAndResolve = (authState) => {\n        if (cancelablePromise.isCanceled) {\n          resolve();\n          return;\n        }\n        // emit event and resolve promise \n        emitAuthStateChange(authState);\n        resolve();\n\n        // clear pending states after resolve\n        this._pending = { ...DEFAULT_PENDING };\n      };\n\n      this._sdk.isAuthenticated()\n        .then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n          const promise: Promise<AuthState> = transformAuthState\n            ? transformAuthState(this._sdk, authState)\n            : Promise.resolve(authState);\n\n          promise\n            .then(authState => emitAndResolve(authState))\n            .catch(error => emitAndResolve({\n              accessToken, \n              idToken, \n              refreshToken,\n              isAuthenticated: false, \n              error\n            }));\n        });\n    });\n    /* eslint-enable complexity */\n    this._pending.updateAuthStatePromise = cancelablePromise;\n\n    return finalPromise(cancelablePromise);\n  }\n\n  subscribe(handler): void {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n  unsubscribe(handler?): void {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { StorageProvider, SimpleStorage } from './types';\n\n// formerly known as \"storageBuilder\". Represents an object saved under a key/name.\nexport default class SavedObject implements StorageProvider {\n  storageProvider: SimpleStorage;\n  storageName: string;\n\n  constructor(storage: SimpleStorage, storageName: string) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  //\n  // SimpleStorage interface\n  //\n\n  getItem(key: string) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key: string, value: any) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key: string) {\n    return this.clearStorage(key);\n  }\n\n  //\n  // StorageProvider interface\n  //\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj?: any) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key?: string) {\n    if (!key) {\n      // clear all\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  PKCE_STORAGE_NAME,\n  TOKEN_STORAGE_NAME,\n  TRANSACTION_STORAGE_NAME,\n  SHARED_TRANSACTION_STORAGE_NAME,\n  ORIGINAL_URI_STORAGE_NAME,\n  IDX_RESPONSE_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n  REDIRECT_OAUTH_PARAMS_NAME\n} from './constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  PKCEStorage,\n  CookieOptions,\n  TransactionStorage,\n  IdxResponseStorage,\n  StorageManagerOptions,\n  SimpleStorage\n} from './types';\nimport SavedObject from './SavedObject';\nimport { isBrowser } from './features';\nimport { warn } from './util';\nimport { AuthSdkError } from './errors';\n\nfunction logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageProvider) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\nexport default class StorageManager {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // Maintain compatibility. Automatically fallback. May change in next major version. OKTA-362589\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = null;\n      }\n    }\n\n    if (!storageType) {\n      storageType = this.storageUtil.findStorageType(storageTypes);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // stateToken, interactionHandle\n  getTransactionStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('transaction', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getSharedTansactionStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('shared-transaction', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getOriginalUriStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('original-uri', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // intermediate idxResponse\n  // store for network traffic optimazation purpose\n  // TODO: revisit in auth-js 6.0 epic JIRA: OKTA-399791\n  getIdxResponseStorage(options?: StorageOptions): IdxResponseStorage {\n    let storage;\n    if (isBrowser()) {\n      // on browser side only use memory storage \n      try {\n        storage = this.storageUtil.getStorageByType('memory', options);\n      } catch (e) {\n        // it's ok to miss response storage\n        // eslint-disable-next-line max-len\n        warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n      }\n    } else {\n      // on server side re-use transaction custom storage\n      const transactionStorage = this.getTransactionStorage(options);\n      if (transactionStorage) {\n        storage = {\n          getItem: (key) => {\n            const transaction = transactionStorage.getStorage();\n            if (transaction && transaction[key]) {\n              return transaction[key];\n            }\n            return null;\n          },\n          setItem: (key, val) => {\n            const transaction = transactionStorage.getStorage();\n            if (!transaction) {\n              throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n            }\n            transaction[key] = val;\n            transactionStorage.setStorage(transaction);\n          },\n          removeItem: (key) => {\n            const transaction = transactionStorage.getStorage();\n            if (!transaction) {\n              return;\n            }\n            delete transaction[key];\n            transactionStorage.setStorage(transaction);\n          }\n        };\n      }\n    }\n\n    if (!storage) {\n      return null;\n    }\n\n    return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // Will be removed in an upcoming major version. OKTA-362589\n  getLegacyPKCEStorage(options?: StorageOptions): PKCEStorage {\n    options = this.getOptionsForSection('legacy-pkce', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || PKCE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getLegacyOAuthParamsStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('legacy-oauth-params', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || REDIRECT_OAUTH_PARAMS_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n// TODO: remove when idx-js provides type information\n\nexport interface IdxAuthenticatorMethod {\n  type: string;\n}\nexport interface IdxAuthenticator {\n  displayName: string;\n  id: string;\n  key: string;\n  methods: IdxAuthenticatorMethod[];\n  type: string;\n  settings?: {\n    complexity?: unknown;\n    age?: unknown;\n  };\n  contextualData?: unknown;\n}\n\nexport interface IdxForm {\n  value: IdxRemediationValue[];\n}\n\nexport interface IdxOption {\n  value: string | { form: IdxForm };\n  label: string;\n  relatesTo?: IdxAuthenticator;\n}\n\nexport interface IdpConfig {\n  id: string;\n  name: string;\n}\n\nexport interface IdxRemediationValue {\n  name: string;\n  type?: string;\n  required?: boolean;\n  secret?: boolean;\n  visible?: boolean;\n  mutable?: boolean;\n  value?: string;\n  label?: string;\n  form?: IdxForm;\n  options?: IdxOption[];\n  messages?: IdxMessages;\n  minLength?: number;\n  maxLength?: number;\n}\n\nexport interface IdxRemediation {\n  name: string;\n  label?: string;\n  value?: IdxRemediationValue[];\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  idp?: IdpConfig;\n  href?: string;\n  method?: string;\n  type?: string;\n  accepts?: string;\n}\n\nexport interface IdxMessage {\n  message: string;\n  class: string;\n  i18n: {\n    key: string;\n    params?: unknown[];\n  };\n}\n\nexport interface IdxMessages {\n  type: 'array';\n  value: IdxMessage[];\n}\n\n// JSON response from the server\nexport interface RawIdxResponse {\n  version: string;\n  stateHandle: string;\n  intent?: string;\n  expiresAt?: string;\n  remediation?: {\n    type: 'array';\n    value: IdxRemediation[];\n  };\n  messages?: IdxMessages;\n}\n\nexport function isRawIdxResponse(obj: any): obj is RawIdxResponse {\n  return obj && obj.version;\n}\n\n\nexport interface IdxActions {\n  [key: string]: Function;\n}\n\n// Object returned from idx-js\nexport interface IdxResponse {\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  toPersist: {\n    interactionHandle?: string;\n  };\n}\n\nexport function isIdxResponse(obj: any): obj is IdxResponse {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\n","import { isTransactionMeta, TransactionMeta } from '../types';\nimport StorageManager from '../StorageManager';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000; // 30 minutes\n\nexport function pruneSharedStorage(storageManager: StorageManager) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nexport function saveTransactionToSharedStorage(storageManager: StorageManager, state: string, meta: TransactionMeta) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\n\nexport function loadTransactionFromSharedStorage(storageManager: StorageManager, state: string) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\n\nexport function clearTransactionFromSharedStorage(storageManager: StorageManager, state: string) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from './errors';\nimport { REDIRECT_NONCE_COOKIE_NAME, REDIRECT_OAUTH_PARAMS_NAME, REDIRECT_STATE_COOKIE_NAME } from './constants';\nimport StorageManager from './StorageManager';\nimport {\n  StorageProvider,\n  TransactionMeta,\n  isTransactionMeta,\n  isOAuthTransactionMeta,\n  PKCETransactionMeta,\n  OAuthTransactionMeta,\n  TransactionMetaOptions,\n  TransactionManagerOptions,\n  CookieStorage\n} from './types';\nimport { RawIdxResponse, isRawIdxResponse } from './idx/types/idx-js';\nimport { warn } from './util';\nimport {\n  clearTransactionFromSharedStorage,\n  loadTransactionFromSharedStorage,\n  pruneSharedStorage,\n  saveTransactionToSharedStorage\n} from './util/sharedStorage';\n\nexport interface ClearTransactionMetaOptions extends TransactionMetaOptions {\n  clearSharedStorage?: boolean;\n}\nexport default class TransactionManager {\n  options: TransactionManagerOptions;\n  storageManager: StorageManager;\n  legacyWidgetSupport: boolean;\n  saveNonceCookie: boolean;\n  saveStateCookie: boolean;\n  saveParamsCookie: boolean;\n  enableSharedStorage: boolean;\n\n  constructor(options: TransactionManagerOptions) {\n    this.storageManager = options.storageManager;\n    this.legacyWidgetSupport = options.legacyWidgetSupport === false ? false : true;\n    this.saveNonceCookie = options.saveNonceCookie === false ? false : true;\n    this.saveStateCookie = options.saveStateCookie === false ? false : true;\n    this.saveParamsCookie = options.saveParamsCookie === false ? false : true;\n    this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n    this.options = options;\n  }\n\n  // eslint-disable-next-line complexity\n  clear(options: ClearTransactionMetaOptions = {}) {\n    const transactionStorage: StorageProvider = this.storageManager.getTransactionStorage();\n    const meta = transactionStorage.getStorage();\n\n    // Clear primary storage (by default, sessionStorage on browser)\n    transactionStorage.clearStorage();\n\n    // clear IDX response storage\n    this.clearIdxResponse();\n\n    // Usually we do NOT want to clear shared storage because another tab may need it to continue/complete a flow\n    // It can be cleared after a user succcesfully signs in and receives tokens\n    if (this.enableSharedStorage && options.clearSharedStorage) {\n      const state = options.state || meta?.state;\n      if (state) {\n        clearTransactionFromSharedStorage(this.storageManager, state);\n      }\n    }\n  \n    if (!this.legacyWidgetSupport) {\n      return;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      this.clearLegacyOAuthParams();\n    }\n\n    if (options.pkce) {\n      this.clearLegacyPKCE();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  save(meta: TransactionMeta, options: TransactionMetaOptions = {}) {\n    // There must be only one transaction executing at a time.\n    // Before saving, check to see if a transaction is already stored.\n    // An existing transaction indicates a concurrency/race/overlap condition\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    const obj = storage.getStorage();\n    // oie process may need to update transaction in the middle of process for tracking purpose\n    // false alarm might be caused \n    // TODO: revisit for a better solution, https://oktainc.atlassian.net/browse/OKTA-430919\n    if (isTransactionMeta(obj) && !options.muteWarning) {\n      // eslint-disable-next-line max-len\n      warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n    }\n\n    storage.setStorage(meta);\n\n    // Shared storage allows continuation of transaction in another tab\n    if (this.enableSharedStorage && meta.state) {\n      saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n    }\n\n    if (!options.oauth) {\n      return;\n    }\n  \n    // Legacy cookie storage\n    if (this.saveNonceCookie || this.saveStateCookie || this.saveParamsCookie) {\n      const cookieStorage: CookieStorage = this.storageManager.getStorage({ storageType: 'cookie' }) as CookieStorage;\n\n      if (this.saveParamsCookie) {\n        const { \n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        } = meta;\n        const oauthParams = {\n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        };\n        cookieStorage.setItem(REDIRECT_OAUTH_PARAMS_NAME, JSON.stringify(oauthParams), null);\n      }\n\n      if (this.saveNonceCookie && meta.nonce) {\n        // Set nonce cookie for servers to validate nonce in id_token\n        cookieStorage.setItem(REDIRECT_NONCE_COOKIE_NAME, meta.nonce, null);\n      }\n\n      if (this.saveStateCookie && meta.state) {\n        // Set state cookie for servers to validate state\n        cookieStorage.setItem(REDIRECT_STATE_COOKIE_NAME, meta.state, null);\n      }\n    }\n  }\n\n  exists(options: TransactionMetaOptions = {}): boolean {\n    try {\n      const meta: TransactionMeta = this.load(options);\n      return !!meta;\n    } catch {\n      return false;\n    }\n  }\n\n  // load transaction meta from storage\n  // eslint-disable-next-line complexity,max-statements\n  load(options: TransactionMetaOptions = {}): TransactionMeta {\n\n    let meta: TransactionMeta;\n\n    // If state was passed, try loading transaction data from shared storage\n    if (this.enableSharedStorage && options.state) {\n      pruneSharedStorage(this.storageManager); // prune before load\n      meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n      if (isTransactionMeta(meta)) {\n        return meta;\n      }\n    }\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    meta = storage.getStorage();\n    if (isTransactionMeta(meta)) {\n      // if we have meta in the new location, there is no need to go further\n      return meta;\n    }\n\n    if (!this.legacyWidgetSupport) {\n      return null;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      try {\n        const oauthParams = this.loadLegacyOAuthParams();\n        Object.assign(meta, oauthParams);\n      } finally {\n        this.clearLegacyOAuthParams();\n      }\n    }\n\n    if (options.pkce) {\n      try {\n        const pkceMeta: PKCETransactionMeta = this.loadLegacyPKCE();\n        Object.assign(meta, pkceMeta);\n      } finally {\n        this.clearLegacyPKCE();\n      }\n    }\n\n    if (isTransactionMeta(meta)) {\n      return meta;\n    }\n    return null;\n  }\n\n  // This is for compatibility with older versions of the signin widget. OKTA-304806\n  clearLegacyPKCE(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyPKCE(): PKCETransactionMeta {\n    let storage: StorageProvider;\n    let obj;\n    \n    // Try reading from localStorage first.\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n\n    // If meta is not valid, read from sessionStorage. This is expected for more recent versions of the widget.\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n\n    // If meta is not valid, throw an exception to avoid misleading server-side error\n    // The most likely cause of this error is trying to handle a callback twice\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', null);\n  }\n\n  clearLegacyOAuthParams(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyOAuthParams(): OAuthTransactionMeta {\n    let storage: StorageProvider;\n    let oauthParams;\n  \n    // load first from session storage\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      oauthParams = storage.getStorage();\n    }\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n    // try to load from cookie\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      oauthParams = storage.getStorage();\n    }\n\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n\n    // Something is there but we don't recognize it\n    // throw new AuthSdkError('Unable to parse the ' + REDIRECT_OAUTH_PARAMS_NAME + ' value from storage');\n  }\n\n  saveIdxResponse(idxResponse: RawIdxResponse): void {\n    const storage: StorageProvider = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return;\n    }\n    storage.setStorage(idxResponse);\n  }\n\n  loadIdxResponse(): RawIdxResponse {\n    const storage: StorageProvider = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return null;\n    }\n    const idxResponse = storage.getStorage();\n    if (!isRawIdxResponse(idxResponse)) {\n      return null;\n    }\n    return idxResponse;\n  }\n\n  clearIdxResponse(): void {\n    const storage: StorageProvider = this.storageManager.getIdxResponseStorage();\n    storage?.clearStorage();\n  }\n}","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport crossFetch from 'cross-fetch';\nimport { FetchOptions, FetchResponse, HttpResponse } from '../types';\n\nfunction readData(response: FetchResponse): Promise<object | string> {\n  if (response.headers.get('Content-Type') &&\n    response.headers.get('Content-Type').toLowerCase().indexOf('application/json') >= 0) {\n  return response.json()\n    // JSON parse can fail if response is not a valid object\n    .catch(e => {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status: number, data: object | string, response: Response) {\n  const isObject = typeof data === 'object';\n  const headers = {};\n  for (const pair of response.headers.entries()) {\n    headers[pair[0]] = pair[1];\n  }\n  const result: HttpResponse = {\n    responseText: isObject ? JSON.stringify(data) : data as string,\n    status: status,\n    headers\n  };\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data as object;\n  }\n  return result;\n}\n\n/* eslint-disable complexity */\nfunction fetchRequest(method: string, url: string, args: FetchOptions) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n\n  // JSON encode body (if appropriate)\n  if (contentType === 'application/json' && body && typeof body !== 'string') {\n    body = JSON.stringify(body);\n  }\n  var fetch = global.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body as string,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function(response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response)\n      .then(data => {\n        return formatResult(status, data, response);\n      })\n      .then(result => {\n        if (error || result.responseJSON?.error) {\n          // Throwing result object since error handling is done in http.js\n          throw result;\n        }\n        return result;\n      });\n  });\n}\n\nexport default fetchRequest;\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { SimpleStorage, StorageType, StorageUtil, Cookies } from '../types';\nimport { AuthSdkError } from '../errors';\nconst NodeCache = require('node-cache'); // commonJS module cannot be imported without esModuleInterop\n\n// this is a SHARED memory storage to support a stateless http server\nconst sharedStorage = typeof NodeCache === 'function' ? new NodeCache() : null;\n\nclass ServerCookies implements Cookies {\n  nodeCache: any; // NodeCache\n  \n  constructor(nodeCache) {\n    this.nodeCache = nodeCache;\n  }\n\n  set(name: string, value: string, expiresAt: string): string {\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!(Date.parse(expiresAt))) {\n      // Time to expiration in seconds\n      var ttl = (Date.parse(expiresAt) - Date.now()) / 1000;\n      this.nodeCache.set(name, value, ttl);\n    } else {\n      this.nodeCache.set(name, value);\n    }\n\n    return this.get(name);\n  }\n\n  get(name): string {\n    return this.nodeCache.get(name);\n  }\n\n  delete(name) {\n    return this.nodeCache.del(name);\n  }\n}\n// Building this as an object allows us to mock the functions in our tests\nclass ServerStorage implements StorageUtil {\n  nodeCache: any; // NodeCache\n  storage: Cookies;\n  constructor(nodeCache) {\n    this.nodeCache = nodeCache;\n    this.storage = new ServerCookies(nodeCache);\n  }\n\n  testStorageType(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        break;\n    }\n    return supported;\n  }\n\n  getStorageByType(storageType: StorageType): SimpleStorage {\n    let storageProvider = null;\n    switch (storageType) {\n      case 'memory':\n        storageProvider = this.getStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  }\n\n  findStorageType(): StorageType {\n    return 'memory';\n  }\n\n  // will be removed in next version. OKTA-362589\n  getHttpCache() {\n    return null; // stubbed in server.js\n  }\n\n  // shared in-memory using node cache\n  getStorage(): SimpleStorage {\n    return {\n      getItem: this.nodeCache.get,\n      setItem: (key, value) => {\n        this.nodeCache.set(key, value, '2200-01-01T00:00:00.000Z');\n      }\n    };\n  }\n}\n\nexport default new ServerStorage(sharedStorage);\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { removeTrailingSlash, warn, removeNils } from './util';\nimport { assertValidConfig } from './builderUtil';\nimport { OktaAuthOptions, StorageManagerOptions } from './types';\n\nimport fetchRequest from './fetch/fetchRequest';\nimport browserStorage from './browser/browserStorage';\nimport serverStorage from './server/serverStorage';\nimport { isBrowser, isHTTPS } from './features';\n\nconst BROWSER_STORAGE: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ],\n    useMultipleCookies: true\n  },\n  cache: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'sessionStorage',\n      'localStorage',\n      'cookie'\n    ]\n  },\n  'shared-transaction': {\n    storageTypes: [\n      'localStorage'\n    ]\n  },\n  'original-uri': {\n    storageTypes: [\n      'localStorage'\n    ]\n  }\n};\n\nconst SERVER_STORAGE: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'memory'\n    ]\n  },\n  cache: {\n    storageTypes: [\n      'memory'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'memory'\n    ]\n  }\n};\n\nfunction getCookieSettings(args: OktaAuthOptions = {}, isHTTPS: boolean) {\n  // Secure cookies will be automatically used on a HTTPS connection\n  // Non-secure cookies will be automatically used on a HTTP connection\n  // secure option can override the automatic behavior\n  var cookieSettings = args.cookies || {};\n  if (typeof cookieSettings.secure === 'undefined') {\n    cookieSettings.secure = isHTTPS;\n  }\n  if (typeof cookieSettings.sameSite === 'undefined') {\n    cookieSettings.sameSite = cookieSettings.secure ? 'none' : 'lax';\n  }\n\n  // If secure=true, but the connection is not HTTPS, set secure=false.\n  if (cookieSettings.secure && !isHTTPS) {\n    // eslint-disable-next-line no-console\n    warn(\n      'The current page is not being served with the HTTPS protocol.\\n' +\n      'For security reasons, we strongly recommend using HTTPS.\\n' +\n      'If you cannot use HTTPS, set \"cookies.secure\" option to false.'\n    );\n    cookieSettings.secure = false;\n  }\n\n  // Chrome >= 80 will block cookies with SameSite=None unless they are also Secure\n  // If sameSite=none, but the connection is not HTTPS, set sameSite=lax.\n  if (cookieSettings.sameSite === 'none' && !cookieSettings.secure) {\n    cookieSettings.sameSite = 'lax';\n  }\n\n  return cookieSettings;\n}\n\n\nexport function getDefaultOptions(): OktaAuthOptions {\n  const storageUtil = isBrowser() ? browserStorage : serverStorage;\n  const storageManager = isBrowser() ? BROWSER_STORAGE : SERVER_STORAGE;\n  const enableSharedStorage = isBrowser() ? true : false; // localStorage for multi-tab flows (browser only)\n  return {\n    devMode: false,\n    httpRequestClient: fetchRequest,\n    storageUtil,\n    storageManager,\n    transactionManager: {\n      enableSharedStorage\n    }\n  };\n}\n\nfunction mergeOptions(options, args): OktaAuthOptions {\n  return Object.assign({}, options, removeNils(args), {\n    storageManager: Object.assign({}, options.storageManager, args.storageManager),\n    transactionManager: Object.assign({}, options.transactionManager, args.transactionManager),\n  });\n}\n\nexport function buildOptions(args: OktaAuthOptions = {}): OktaAuthOptions {\n  assertValidConfig(args);\n  args = mergeOptions(getDefaultOptions(), args);\n  return removeNils({\n    // OIDC configuration\n    issuer: removeTrailingSlash(args.issuer),\n    tokenUrl: removeTrailingSlash(args.tokenUrl),\n    authorizeUrl: removeTrailingSlash(args.authorizeUrl),\n    userinfoUrl: removeTrailingSlash(args.userinfoUrl),\n    revokeUrl: removeTrailingSlash(args.revokeUrl),\n    logoutUrl: removeTrailingSlash(args.logoutUrl),\n    clientId: args.clientId,\n    redirectUri: args.redirectUri,\n    state: args.state,\n    scopes: args.scopes,\n    postLogoutRedirectUri: args.postLogoutRedirectUri,\n    responseMode: args.responseMode,\n    responseType: args.responseType,\n    pkce: args.pkce === false ? false : true, // PKCE defaults to true\n    useInteractionCodeFlow: args.useInteractionCodeFlow,\n\n    // Internal options\n    httpRequestClient: args.httpRequestClient,\n    transformErrorXHR: args.transformErrorXHR,\n    transformAuthState: args.transformAuthState,\n    restoreOriginalUri: args.restoreOriginalUri,\n    storageUtil: args.storageUtil,\n    headers: args.headers,\n    devMode: !!args.devMode,\n    storageManager: args.storageManager,\n    transactionManager: args.transactionManager,\n    cookies: isBrowser() ? getCookieSettings(args, isHTTPS()) : args.cookies,\n\n    // Give the developer the ability to disable token signature validation.\n    ignoreSignature: !!args.ignoreSignature,\n\n    // Server-side web applications\n    clientSecret: args.clientSecret\n  });\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuth, IdxTransactionMeta, TransactionMetaOptions } from '../types';\nimport { warn } from '../util';\nimport { getOAuthUrls } from '../oidc';\n\n// Calculate new values\nexport async function createTransactionMeta(authClient: OktaAuth, options?: TransactionMetaOptions) {\n  const tokenParams = await authClient.token.prepareTokenParams(options);\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    state,\n    nonce,\n    ignoreSignature,\n    codeVerifier,\n    codeChallengeMethod,\n    codeChallenge,\n  } = tokenParams;\n  const urls = getOAuthUrls(authClient, tokenParams);\n  const flow = authClient.idx.getFlow() || 'default';\n  const issuer = authClient.options.issuer;\n  const meta = {\n    flow,\n    issuer,\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    state,\n    nonce,\n    urls,\n    ignoreSignature,\n    codeVerifier,\n    codeChallengeMethod,\n    codeChallenge \n  };\n  return meta;\n}\n\nexport function transactionMetaExist(authClient: OktaAuth, options?: TransactionMetaOptions): boolean {\n  if (authClient.transactionManager.exists(options)) {\n    const existing = authClient.transactionManager.load(options) as IdxTransactionMeta;\n    if (isTransactionMetaValid(authClient, existing) && existing.interactionHandle) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// Returns the saved transaction meta, if it exists and is valid, or undefined\nexport function getSavedTransactionMeta(authClient: OktaAuth, options?: TransactionMetaOptions): IdxTransactionMeta {\n  const state = options?.state || authClient.options.state;\n  const existing = authClient.transactionManager.load({ state }) as IdxTransactionMeta;\n  if (existing && isTransactionMetaValid(authClient, existing)) {\n    return existing;\n  }\n}\n\nexport async function getTransactionMeta(\n  authClient: OktaAuth,\n  options?: TransactionMetaOptions\n): Promise<IdxTransactionMeta> {\n  // Load existing transaction meta from storage\n  if (authClient.transactionManager.exists(options)) {\n    const validExistingMeta = getSavedTransactionMeta(authClient, options);\n    if (validExistingMeta) {\n      return validExistingMeta;\n    }\n    // existing meta is not valid for this configuration\n    // this is common when changing configuration in local development environment\n    // in a production environment, this may indicate that two apps are sharing a storage key\n    warn('Saved transaction meta does not match the current configuration. ' + \n      'This may indicate that two apps are sharing a storage key.');\n  }\n\n  return createTransactionMeta(authClient, options);\n}\n\nexport function saveTransactionMeta (authClient: OktaAuth, meta) {\n  authClient.transactionManager.save(meta, { muteWarning: true });\n}\n\nexport function clearTransactionMeta (authClient: OktaAuth) {\n  authClient.transactionManager.clear();\n}\n\n// returns true if values in meta match current authClient options\n// eslint-disable-next-line complexity\nexport function isTransactionMetaValid (authClient: OktaAuth, meta) {\n  // First validate against required config\n  const keys = ['issuer', 'clientId', 'redirectUri'];\n  if (keys.some(key => authClient.options[key] !== meta[key])) {\n    return false;\n  }\n\n  // Validate optional config\n  const { flow, state } = authClient.options;\n  \n  // If state is specified, it must match meta to be valid\n  if (state && state !== meta.state) {\n    return false;\n  }\n\n  // Specific flows should not share transaction data\n  const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      // The flow has changed; abandon the old transaction\n      return false;\n    }\n  }\n\n  return true;\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport idx from '@okta/okta-idx-js';\nimport { OktaAuth, IdxTransactionMeta } from '../types';\nimport { getTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\n\nexport interface InteractOptions {\n  state?: string;\n  scopes?: string[];\n}\n\nexport interface InteractResponse {\n  state?: string;\n  interactionHandle: string;\n  meta: IdxTransactionMeta;\n}\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (authClient: OktaAuth, options: InteractOptions = {}): Promise<InteractResponse> {\n  let state = options.state || authClient.options.state;\n  const meta = await getTransactionMeta(authClient, { state });\n\n  // Saved transaction, return meta\n  if (meta.interactionHandle) {\n    return getResponse(meta);\n  }\n\n  // These properties are always loaded from meta (or calculated fresh)\n  const { codeChallenge, codeChallengeMethod } = meta;\n\n  // These properties are defined by global configuration\n  const { clientId, redirectUri } = authClient.options;\n\n  // These properties can be set in options, but also have a default value in global configuration.\n  state = state || meta.state;\n  const scopes = options.scopes || authClient.options.scopes || meta.scopes;\n\n  const baseUrl = getOAuthBaseUrl(authClient);\n  return idx.interact({\n    // OAuth\n    clientId, \n    baseUrl,\n    scopes,\n    state,\n    redirectUri,\n\n    // PKCE\n    codeChallenge,\n    codeChallengeMethod\n  }).then(interactionHandle => {\n    const newMeta = {\n      ...meta,\n      interactionHandle,\n      state,\n      scopes\n    };\n    // Save transaction meta so it can be resumed\n    saveTransactionMeta(authClient, newMeta);\n\n    return getResponse(newMeta);\n  });\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport idx from '@okta/okta-idx-js';\nimport { OktaAuth } from '../types';\nimport { IdxResponse, isRawIdxResponse, RawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\n\nexport interface IntrospectOptions {\n  interactionHandle?: string;\n  stateHandle?: string;\n  stateTokenExternalId?: string;\n}\n\nexport async function introspect (authClient: OktaAuth, options: IntrospectOptions): Promise<IdxResponse> {\n  const useLastResponse = !options.stateTokenExternalId; // email verify callback: must make a new response\n  let rawIdxResponse: RawIdxResponse;\n  \n  if (useLastResponse) {\n    // try load from storage first\n    rawIdxResponse = authClient.transactionManager.loadIdxResponse();\n  }\n  \n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    try {\n      rawIdxResponse = await idx.introspect({ domain, version, ...options });\n    } catch (err) {\n      if (isRawIdxResponse(err)) {\n        rawIdxResponse = err;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  return idx.makeIdxState(rawIdxResponse);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, max-depth, complexity */\nimport { AuthSdkError } from '../errors';\nimport { Remediator, RemediationValues } from './remediators';\nimport { RemediationFlow } from './flow';\nimport { RunOptions } from './run';\nimport { NextStep, IdxMessage } from './types';\nimport { \n  IdxResponse,  \n  IdxRemediation,\n  isIdxResponse, \n} from './types/idx-js';\n\ninterface RemediationResponse {\n  idxResponse?: IdxResponse;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  terminal?: boolean;\n  canceled?: boolean;\n}\n// Return first match idxRemediation in allowed remediators\nexport function getRemediator(\n  idxRemediations: IdxRemediation[],\n  values: RemediationValues,\n  options: RunOptions,\n): Remediator {\n  const { remediators, flowMonitor } = options;\n\n  let remediator;\n  const remediatorCandidates = [];\n  for (let remediation of idxRemediations) {\n    const isRemeditionInFlow = Object.keys(remediators).includes(remediation.name);\n    if (!isRemeditionInFlow) {\n      continue;\n    }\n      \n    const T = remediators[remediation.name];\n    remediator = new T(remediation, values);\n    if (flowMonitor.isRemediatorCandidate(remediator, idxRemediations, values)) {\n      if (remediator.canRemediate()) {\n        // found the remediator\n        return remediator;\n      }\n      // remediator cannot handle the current values\n      // maybe return for next step\n      remediatorCandidates.push(remediator);  \n    }\n  }\n  \n  // TODO: why is it a problem to have multiple remediations? \n  // JIRA: https://oktainc.atlassian.net/browse/OKTA-400758\n  // if (remediatorCandidates.length > 1) {\n  //   const remediationNames = remediatorCandidates.reduce((acc, curr) => {\n  //     const name = curr.getName();\n  //     return acc ? `${acc}, ${name}` : name;\n  //   }, '');\n  //   throw new AuthSdkError(`\n  //     More than one remediation can match the current input, remediations: ${remediationNames}\n  //   `);\n  // }\n\n  return remediatorCandidates[0];\n}\n\nfunction isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nfunction canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nfunction canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nfunction getIdxMessages(\n  idxResponse: IdxResponse, remediators: RemediationFlow\n): IdxMessage[] {\n  let messages = [];\n  if (!remediators) {\n    return messages;\n  }\n\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages];\n  }\n\n  // Handle field messages for current flow\n  for (let remediation of neededToProceed) {\n    const T = remediators[remediation.name];\n    if (!T) {\n      continue;\n    }\n    const remediator = new T(remediation);\n    const fieldMessages = remediator.getMessages();\n    if (fieldMessages) {\n      messages = [...messages, ...fieldMessages];\n    }\n  }\n\n  return messages;\n}\n\nfunction getNextStep(\n  remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep();\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nfunction handleIdxError(e, remediators, remediator?) {\n  // Handle idx messages\n  const idxState: IdxResponse = isIdxResponse(e) ? e : null;\n  if (!idxState) {\n    // Thrown error terminates the interaction with idx\n    throw e;\n  }\n  const terminal = isTerminalResponse(idxState);\n  const messages = getIdxMessages(idxState, remediators);\n  if (terminal) {\n    return { terminal, messages };\n  } else {\n    const nextStep = remediator && getNextStep(remediator, idxState);\n    return { \n      messages, \n      ...(nextStep && { nextStep }) \n    };\n  }\n}\n\nfunction getActionFromValues(values, idxResponse: IdxResponse): string | undefined {\n  // Currently support resend actions only\n  return Object.keys(idxResponse.actions).find(action => !!values.resend && action.includes('-resend'));\n}\n\nfunction removeActionFromValues(values) {\n  // Currently support resend actions only\n  values.resend = undefined;\n  return values;\n}\n\n// This function is called recursively until it reaches success or cannot be remediated\nexport async function remediate(\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RunOptions\n): Promise<RemediationResponse> {\n  let { neededToProceed, interactionCode } = idxResponse;\n  const { remediators, flowMonitor } = options;\n\n  // If the response contains an interaction code, there is no need to remediate\n  if (interactionCode) {\n    return { idxResponse };\n  }\n\n  // Reach to terminal state\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getIdxMessages(idxResponse, remediators);\n  if (terminal) {\n    return { terminal, messages };\n  }\n  \n  // Try actions in idxResponse first\n  const actionFromValues = getActionFromValues(values, idxResponse);\n  const actions = [\n    ...options.actions || [],\n    ...(actionFromValues && [actionFromValues] || []),\n  ];\n  if (actions) {\n    for (let action of actions) {\n      let valuesWithoutExecutedAction = removeActionFromValues(values);\n      if (typeof idxResponse.actions[action] === 'function') {\n        try {\n          idxResponse = await idxResponse.actions[action]();\n        } catch (e) {\n          return handleIdxError(e, remediators);\n        }\n        if (action === 'cancel') {\n          return { canceled: true };\n        }\n        return remediate(idxResponse, valuesWithoutExecutedAction, options); // recursive call\n      }\n    }\n  }\n\n  const remediator = getRemediator(neededToProceed, values, options);\n  \n  if (!remediator) {\n    throw new AuthSdkError(`\n      No remediation can match current flow, check policy settings in your org.\n      Remediations: [${neededToProceed.reduce((acc, curr) => acc ? acc + ' ,' + curr.name : curr.name, '')}]\n    `);\n  }\n\n  if (flowMonitor.loopDetected(remediator)) {\n    throw new AuthSdkError(`\n      Remediation run into loop, break!!! remediation: ${remediator.getName()}\n    `);\n  }\n\n  // Recursive loop breaker\n  // Return next step to the caller\n  if (!remediator.canRemediate()) {\n    const nextStep = getNextStep(remediator, idxResponse);\n    return { idxResponse, nextStep };\n  }\n\n  const name = remediator.getName();\n  const data = remediator.getData();\n  try {\n    idxResponse = await idxResponse.proceed(name, data);\n\n    // Track succeed remediations in the current transaction\n    await flowMonitor.trackRemediations(name);\n    \n    // Successfully get interaction code\n    if (idxResponse.interactionCode) {\n      return { idxResponse };\n    }\n\n    // Reach to terminal state\n    const terminal = isTerminalResponse(idxResponse);\n    const messages = getIdxMessages(idxResponse, remediators);\n    if (terminal) {\n      return { terminal, messages };\n    }\n\n    // Handle idx message in nextStep\n    if (messages.length) {\n      const nextStep = getNextStep(remediator, idxResponse);\n      return { nextStep, messages };\n    }\n    \n    // We may want to trim the values bag for the next remediation\n    // Let the remediator decide what the values should be (default to current values)\n    values = remediator.getValuesAfterProceed();\n    return remediate(idxResponse, values, options); // recursive call\n  } catch (e) {\n    return handleIdxError(e, remediators, remediator);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  return remediation.value.find(({ name }) => name === 'authenticator');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { AuthSdkError } from '../../../errors';\nimport { NextStep, IdxMessage, Authenticator, Input } from '../../types';\nimport { IdxAuthenticator, IdxRemediation } from '../../types/idx-js';\nimport { getAllValues, getRequiredValues, titleCase } from '../util';\n\n// A map from IDX data values (server spec) to RemediationValues (client spec)\nexport type IdxToRemediationValueMap = Record<string, string[]>;\n\nexport interface RemediationValues {\n  stateHandle?: string;\n  authenticators?: Authenticator[] | string[];\n}\n\n// Base class - DO NOT expose static remediationName\nexport class Remediator {\n  static remediationName: string;\n\n  remediation: IdxRemediation;\n  values: RemediationValues;\n  map?: IdxToRemediationValueMap;\n\n  constructor(remediation: IdxRemediation, values: RemediationValues = {}) {\n    // map authenticators to Authenticator[] type\n    values.authenticators = (values.authenticators?.map(authenticator => {\n      return typeof authenticator === 'string' \n        ? { key: authenticator } : authenticator;\n    }) || []) as Authenticator[];\n    \n    // assign fields to the instance\n    this.values = values;\n    this.remediation = remediation;\n  }\n\n  getName(): string {\n    return this.remediation.name;\n  }\n\n  // Override this method to provide custom check\n  canRemediate(): boolean {\n    if (!this.map) {\n      return false;\n    }\n    const required = getRequiredValues(this.remediation);\n    const needed = required.find((key) => !this.hasData(key));\n    if (needed) {\n      return false; // missing data for a required field\n    }\n    return true; // all required fields have available data\n  }\n\n  // returns an object for the entire remediation form, or just a part\n  getData(key?: string) {\n\n    if (!key) {\n      let allValues = getAllValues(this.remediation);\n      let res = allValues.reduce((data, key) => {\n        data[key] = this.getData(key); // recursive\n        return data;\n      }, {});\n      return res;\n    }\n\n    // Map value by \"map${Property}\" function in each subClass\n    if (typeof this[`map${titleCase(key)}`] === 'function') {\n      return this[`map${titleCase(key)}`](\n        this.remediation.value.find(({name}) => name === key)\n      );\n    }\n\n    if (!this.map) {\n      return this.values[key];\n    }\n\n    // Handle general primitive types\n    const entry = this.map[key];\n    if (!entry) {\n      return this.values[key];\n    }\n\n    // find the first aliased property that returns a truthy value\n    for (let i = 0; i < entry.length; i++) {\n      let val = this.values[entry[i]];\n      if (val) {\n        return val;\n      }\n    }\n  }\n\n  hasData(\n    key: string // idx name\n  ): boolean \n  {\n    // no attempt to format, we want simple true/false\n\n    // First see if the remediation has a mapping for this vale\n    const data = this.getData(key);\n    if (typeof data === 'object') {\n      return !!Object.keys(data).find(key => !!data[key]);\n    }\n    return !!data;\n  }\n\n  getNextStep(): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    const authenticator = this.getAuthenticator();\n    // TODO: remove type field in the next major version change\n    // https://oktainc.atlassian.net/browse/OKTA-431749\n    const type = authenticator?.type;\n    return { \n      name, \n      inputs, \n      ...(type && { type }),\n      ...(authenticator && { authenticator }),\n    };\n  }\n\n  // Get inputs for the next step\n  private getInputs(): Input[] {\n    if (!this.map) {\n      return [];\n    }\n\n    return Object.keys(this.map).reduce((inputs, key) => {\n      const inputFromRemediation = this.remediation.value.find(item => item.name === key);\n      if (!inputFromRemediation) {\n        return inputs;\n      }\n\n      let input: Input;\n      const aliases = this.map[key];\n      const { type } = inputFromRemediation;\n      if (typeof this[`getInput${titleCase(key)}`] === 'function') {\n        input = this[`getInput${titleCase(key)}`](inputFromRemediation);\n      } else if (type !== 'object') {\n        // handle general primitive types\n        let name;\n        if (aliases.length === 1) {\n          name = aliases[0];\n        } else {\n          // try find key from values\n          name = aliases.find(name => Object.keys(this.values).includes(name));\n        }\n        if (name) {\n          input = { ...inputFromRemediation, name };\n        }\n      } \n\n      if (!input) {\n        throw new AuthSdkError(`Missing custom getInput${titleCase(key)} method in Remediator: ${this.getName()}`);\n      }\n\n      if (Array.isArray(input)) {\n        input.forEach(i => inputs.push(i));\n      } else {\n        inputs.push(input);\n      }\n      return inputs;\n    }, []);\n  }\n\n  // Override this method to grab messages per remediation\n  getMessages(): IdxMessage[] | undefined {\n    if (!this.remediation.value) {\n      return;\n    }\n    return this.remediation.value[0]?.form?.value.reduce((messages, field) => {\n      if (field.messages) {\n        messages = [...messages, ...field.messages.value];\n      }\n      return messages;\n    }, []);\n  }\n\n  // Prepare values for the next remediation\n  // In general, remove finished authenticator from list\n  getValuesAfterProceed(): unknown {\n    const authenticatorKey = this.getAuthenticator()?.key;\n    const authenticators = (this.values.authenticators as Authenticator[])\n      ?.filter(authenticator => authenticator.key !== authenticatorKey);\n    return { ...this.values, authenticators };\n  }\n\n  protected getAuthenticator(): IdxAuthenticator | undefined {\n    return this.remediation.relatesTo?.value;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\n\nexport interface VerifyAuthenticatorValues extends RemediationValues {\n  verificationCode?: string;\n  password?: string;\n}\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator extends Remediator {\n\n  values: VerifyAuthenticatorValues;\n\n  map = {\n    'credentials': []\n  };\n\n  canRemediate() {\n    return !!(this.values.password || this.values.verificationCode);\n  }\n\n  mapCredentials() {\n    return { \n      passcode: this.values.verificationCode || this.values.password\n    };\n  }\n\n  getInputCredentials(input) {\n    const challengeType = this.getAuthenticator().type;\n    const name = challengeType === 'password' ? 'password' : 'verificationCode';\n    return {\n      ...input.form?.value[0],\n      name,\n      type: 'string',\n      required: input.required\n    };\n  }\n\n  getValuesAfterProceed() {\n    let values = super.getValuesAfterProceed() as VerifyAuthenticatorValues;\n    const authenticator = this.getAuthenticator();\n    if (authenticator.type === 'password') {\n      delete values.password;\n    } else {\n      delete values.verificationCode;\n    }\n    return values;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type EnrollAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class EnrollAuthenticator extends VerifyAuthenticator {\n  static remediationName = 'enroll-authenticator';\n  values: EnrollAuthenticatorValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ChallengeAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ChallengeAuthenticator extends VerifyAuthenticator {\n  static remediationName = 'challenge-authenticator';\n  values: ChallengeAuthenticatorValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ResetAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ResetAuthenticator extends VerifyAuthenticator {\n  static remediationName = 'reset-authenticator';\n  values: ResetAuthenticatorValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n}\n\nexport class EnrollProfile extends Remediator {\n  static remediationName = 'enroll-profile';\n\n  values: EnrollProfileValues;\n\n  map = {\n    'userProfile': []\n  };\n\n  canRemediate() {\n    const userProfileFromValues = this.getData().userProfile;\n    const userProfileFromRemediation = this.remediation.value.find(({ name }) => name === 'userProfile');\n    return userProfileFromRemediation.form.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    return attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { Authenticator, AuthenticatorKey } from '../types';\nimport { IdxRemediation } from '../types/idx-js';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n}\n\nexport class Identify extends Remediator {\n  static remediationName = 'identify';\n\n  values: IdentifyValues;\n\n  map = {\n    'identifier': ['username'],\n    'credentials': [],\n    'rememberMe': ['rememberMe'],\n  };\n\n  constructor(remediation: IdxRemediation, values?: IdentifyValues) {\n    super(remediation, values);\n\n    // add password authenticator to authenticators list if password is provided\n    const { password, authenticators } = this.values;\n    if (password && !authenticators.some(authenticator => authenticator.type === 'password')) {\n      this.values = {\n        ...this.values,\n        authenticators: [\n          { \n            type: 'password',\n            key: AuthenticatorKey.OKTA_PASSWORD\n          }, \n          ...authenticators\n        ] as Authenticator[]\n      };\n    }\n  }\n\n  canRemediate() {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    return { passcode: this.values.password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n  getValuesAfterProceed() {\n    // Handle username + password scenario\n    // remove \"password\" from authenticator array when remediation is finished\n    if (this.remediation.value.some(({ name }) => name === 'credentials')) {\n      const authenticators = (this.values.authenticators as Authenticator[])\n        ?.filter(authenticator => authenticator.key !== AuthenticatorKey.OKTA_PASSWORD);\n      return { ...this.values, authenticators };\n    }\n\n    return super.getValuesAfterProceed();\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator {\n  static remediationName = 'reenroll-authenticator';\n\n  values: ReEnrollAuthenticatorValues;\n\n  map = {\n    'credentials': []\n  };\n\n  mapCredentials() {\n    return { \n      passcode: this.values.newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    const challengeType = this.getAuthenticator().type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator } from './Base/Remediator';\n\nexport class RedirectIdp extends Remediator {\n  static remediationName = 'redirect-idp';\n\n  canRemediate() {\n    return false;\n  }\n\n  getNextStep() {\n    const { name, type, idp, href } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxRemediation, IdxRemediationValue } from '../../types/idx-js';\nimport { Authenticator } from '../../types';\n\n// Find matched authenticator in provided order\nfunction findMatchedOption(authenticators, options) {\n  let option;\n  for (let authenticator of authenticators) {\n    option = options\n      .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n    if (option) {\n      break;\n    }\n  }\n  return option;\n}\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator extends Remediator {\n  values: SelectAuthenticatorValues;\n  matchedOption: IdxRemediation;\n  \n  map = {\n    authenticator: []\n  }\n\n  constructor(remediation: IdxRemediation, values: SelectAuthenticatorValues = {}) {\n    super(remediation, values);\n    \n    // Unify authenticator input type\n    const { authenticator: selectedAuthenticator, authenticators } = this.values;\n    const hasSelectedAuthenticatorInList = authenticators\n        ?.some((authenticator => authenticator.key === selectedAuthenticator));\n    if (selectedAuthenticator && !hasSelectedAuthenticatorInList) {\n      // add selected authenticator to list\n      this.values.authenticators = [\n        ...(authenticators || []), \n        { key: selectedAuthenticator }\n      ] as Authenticator[];\n    }\n  }\n\n  canRemediate() {\n    const { authenticators } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n    // Proceed with provided authenticators\n    const matchedOption = findMatchedOption(authenticators, options);\n    if (matchedOption) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  getNextStep() {\n    const common = super.getNextStep();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const options = authenticatorFromRemediation.options.map(option => {\n      const { \n        label, \n        relatesTo: { key } \n      } = option;\n      return { label, value: key };\n    });\n    return { ...common, options };\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators } = this.values;\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator() {\n    return { name: 'authenticator', key: 'string' };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './/Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorAuthenticateValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorAuthenticate extends SelectAuthenticator {\n  static remediationName = 'select-authenticator-authenticate';\n  values: SelectAuthenticatorAuthenticateValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorEnrollValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorEnroll extends SelectAuthenticator {\n  static remediationName = 'select-authenticator-enroll';\n  values: SelectAuthenticatorEnrollValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SelectEnrollProfileValues extends RemediationValues {}\n\nexport class SelectEnrollProfile extends Remediator {\n  static remediationName = 'select-enroll-profile';\n\n  values: SelectEnrollProfileValues;\n\n  canRemediate() {\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { Authenticator } from '../../types';\nimport { IdxRemediationValue, IdxOption, IdxRemediation } from '../../types/idx-js';\n\nexport type AuthenticatorDataValues = RemediationValues & {\n  methodType?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class AuthenticatorData extends Remediator {\n\n  map = {\n    'authenticator': []\n  };\n\n  values: AuthenticatorDataValues;\n\n  constructor(remediation: IdxRemediation, values: AuthenticatorDataValues = {}) {\n    super(remediation, values);\n\n    // Unify authenticator input type\n    const { authenticators } = this.values;\n    const authenticatorKey = this.getAuthenticator().key;\n    const authenticator = (authenticators as Authenticator[])\n        ?.find(authenticator => authenticator.key === authenticatorKey);\n    if (authenticator) {\n      // map\n      this.values.authenticators = authenticators.map(authenticator => {\n        if (authenticatorKey === authenticator.type) {\n          return this.mapAuthenticatorFromValues(authenticator);\n        }\n        return authenticator;\n      });\n    } else {\n      // add\n      this.values.authenticators = [\n        ...authenticators, \n        this.mapAuthenticatorFromValues()\n      ] as Authenticator[];\n    }\n  }\n\n  getNextStep() {\n    const common = super.getNextStep();\n    const options = this.getMethodTypes();\n    return { \n      ...common, \n      ...(options && { options }) \n    };\n  }\n\n  // Grab authenticator from authenticators list\n  protected getAuthenticatorFromValues(): Authenticator {\n    if (!this.values.authenticators) {\n      return null;\n    }\n\n    const authenticatorKey = this.getAuthenticator().key;\n    const authenticator = (this.values.authenticators as Authenticator[])\n      .find(authenticator => authenticator.key === authenticatorKey);\n    return authenticator;\n  }\n\n  protected mapAuthenticatorFromValues(authenticator?: Authenticator): Authenticator {\n    // add methodType to authenticator if it exists in values\n    const key = this.getAuthenticator().key;\n    const { methodType } = this.values;\n    return { \n      key, \n      ...(authenticator && authenticator),\n      ...(methodType && { methodType }) \n    };\n  }\n\n  protected getAuthenticatorFromRemediation(): IdxRemediationValue {\n    const authenticator = this.remediation.value\n      .find(({ name }) => name === 'authenticator');\n    return authenticator;\n  }\n\n  private getMethodTypes(): IdxOption[] {\n    const authenticator: IdxRemediationValue = this.getAuthenticatorFromRemediation();\n    return authenticator.form.value.find(({ name }) => name === 'methodType')?.options;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\n\nexport type AuthenticatorVerificationDataValues = AuthenticatorDataValues;\n\nexport class AuthenticatorVerificationData extends AuthenticatorData {\n  static remediationName = 'authenticator-verification-data';\n\n  values: AuthenticatorVerificationDataValues;\n\n  canRemediate() {\n    const authenticator = this.getAuthenticatorFromValues();\n    return !!(authenticator && authenticator.methodType);\n  }\n\n  mapAuthenticator() {\n    const authenticatorFromRemediation = this.getAuthenticatorFromRemediation();\n    const authenticatorFromValues = this.getAuthenticatorFromValues();\n    return { \n      id: authenticatorFromRemediation.form.value\n        .find(({ name }) => name === 'id').value,\n      enrollmentId: authenticatorFromRemediation.form.value\n        .find(({ name }) => name === 'enrollmentId').value,\n      methodType: authenticatorFromValues.methodType,\n    };\n  }\n\n  getInputAuthenticator() {\n    const authenticator = this.getAuthenticatorFromRemediation();\n    const methodType = authenticator.form.value.find(({ name }) => name === 'methodType');\n    // if has methodType in form, let user select the methodType\n    if (methodType && methodType.options) {\n      return { name: 'methodType', type: 'string', required: true };\n    }\n    // no methodType, then return form values\n    const inputs = [...authenticator.form.value];\n    return inputs;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { Authenticator } from '../types';\n\nexport type AuthenticatorEnrollmentDataValues =  AuthenticatorDataValues & {\n  phoneNumber?: string;\n  resend?: boolean; // resend is not a remediator value - revise when IdxResponse structure is updated\n}\nexport class AuthenticatorEnrollmentData extends AuthenticatorData {\n  static remediationName = 'authenticator-enrollment-data';\n\n  values: AuthenticatorEnrollmentDataValues;\n\n  canRemediate() {\n    const authenticator = this.getAuthenticatorFromValues();\n    return !!(authenticator && authenticator.methodType && authenticator.phoneNumber);\n  }\n\n  mapAuthenticator() {\n    const authenticatorFromValues = this.getAuthenticatorFromValues();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    return { \n      id: authenticatorFromRemediation.form.value\n        .find(({ name }) => name === 'id').value,\n      methodType: authenticatorFromValues.methodType,\n      phoneNumber: authenticatorFromValues.phoneNumber,\n    };\n  }\n\n  getInputAuthenticator() {\n    return [\n      { name: 'methodType', type: 'string', required: true },\n      { name: 'phoneNumber', type: 'string', required: true },\n    ];\n  }\n\n  protected mapAuthenticatorFromValues(authenticator?: Authenticator): Authenticator {\n    // get mapped authenticator from base class\n    authenticator = super.mapAuthenticatorFromValues(authenticator);\n\n    // add phoneNumber to authenticator if it exists in values\n    const { phoneNumber } = this.values;\n    return { \n      ...authenticator, \n      ...(phoneNumber && { phoneNumber }) \n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface SkipValues extends RemediationValues {\n  skip?: boolean;\n}\n\nexport class Skip extends Remediator {\n  static remediationName = 'skip';\n\n  values: SkipValues;\n\n  canRemediate() {\n    return !!this.values.skip;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, complexity, max-depth */\nimport { interact } from './interact';\nimport { introspect } from './introspect';\nimport { remediate } from './remediate';\nimport { FlowMonitor, RemediationFlow } from './flow';\nimport * as remediators from './remediators';\nimport { AuthSdkError } from '../errors';\nimport { \n  OktaAuth,\n  IdxStatus,\n  IdxTransaction,\n  IdxFeature,\n  NextStep,\n  FlowIdentifier,\n} from '../types';\nimport { IdxResponse, IdxRemediation } from './types/idx-js';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { ProceedOptions  } from './proceed';\n\nexport type RunOptions = ProceedOptions & {\n  flow?: FlowIdentifier;\n  remediators?: RemediationFlow;\n  flowMonitor?: FlowMonitor;\n  actions?: string[];\n}\n\nfunction getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP);\n  }\n\n  return res;\n}\n\nfunction getAvailableSteps(remediations: IdxRemediation[]): NextStep[] {\n  const res = [];\n\n  const remediatorMap = Object.values(remediators).reduce((map, remediatorClass) => {\n    // Only add concrete subclasses to the map\n    if (remediatorClass.remediationName) {\n      map[remediatorClass.remediationName] = remediatorClass;\n    }\n    return map;\n  }, {});\n\n  for (let remediation of remediations) {\n    const T = remediatorMap[remediation.name];\n    if (T) {\n      const remediator = new T(remediation);\n      res.push (remediator.getNextStep());\n    }\n  }\n\n  return res;\n}\n\nexport async function run(\n  authClient: OktaAuth, \n  options: RunOptions = {},\n): Promise<IdxTransaction> {\n  let tokens;\n  let nextStep;\n  let messages;\n  let error;\n  let meta;\n  let enabledFeatures;\n  let availableSteps;\n  let status = IdxStatus.PENDING;\n  let shouldClearTransaction = false;\n  let idxResponse;\n  let interactionHandle;\n  let metaFromResp;\n\n  try {\n\n    const { flow, stateTokenExternalId, state } = options;\n\n    // Only one flow can be operating at a time\n    if (flow) {\n      authClient.idx.setFlow(flow);\n    }\n\n    // Try to resume saved transaction\n    metaFromResp = getSavedTransactionMeta(authClient, { state });\n    interactionHandle = metaFromResp?.interactionHandle; // may be undefined\n\n    if (!interactionHandle && !stateTokenExternalId) {\n      // start a new transaction\n      authClient.transactionManager.clear();\n      const interactResponse = await interact(authClient, options); \n      interactionHandle = interactResponse.interactionHandle;\n      metaFromResp = interactResponse.meta;\n    }\n\n    // Introspect to get idx response\n    idxResponse = await introspect(authClient, { interactionHandle, stateTokenExternalId });\n\n    if (!options.remediators && !options.actions) {\n      // handle start transaction\n      meta = metaFromResp;\n      enabledFeatures = getEnabledFeatures(idxResponse);\n      availableSteps = getAvailableSteps(idxResponse.neededToProceed);\n    } else {\n      const values: remediators.RemediationValues = { \n        ...options, \n        stateHandle: idxResponse.rawIdxState.stateHandle \n      };\n\n      // Can we handle the remediations?\n      const { \n        idxResponse: idxResponseFromResp, \n        nextStep: nextStepFromResp,\n        terminal,\n        canceled,\n        messages: messagesFromResp,\n      } = await remediate(idxResponse, values, options);\n\n      // Track fields from remediation response\n      nextStep = nextStepFromResp;\n      messages = messagesFromResp;\n\n      // Save intermediate idx response in storage to reduce introspect call\n      if (nextStep && idxResponseFromResp) {\n        authClient.transactionManager.saveIdxResponse(idxResponseFromResp.rawIdxState);\n      }\n\n      if (terminal) {\n        status = IdxStatus.TERMINAL;\n        shouldClearTransaction = true;\n      } if (canceled) {\n        status = IdxStatus.CANCELED;\n        shouldClearTransaction = true;\n      } else if (idxResponseFromResp?.interactionCode) { \n        // Flows may end with interactionCode before the key remediation being hit\n        // Double check if flow is finished to mitigate confusion with the wrapper methods\n        if (!(await options.flowMonitor.isFinished())) {\n          throw new AuthSdkError('Current flow is not supported, check policy settings in your org.');\n        }\n\n        const {\n          clientId,\n          codeVerifier,\n          ignoreSignature,\n          redirectUri,\n          urls,\n          scopes,\n        } = metaFromResp;\n        tokens = await authClient.token.exchangeCodeForTokens({\n          interactionCode: idxResponseFromResp.interactionCode,\n          clientId,\n          codeVerifier,\n          ignoreSignature,\n          redirectUri,\n          scopes\n        }, urls);\n\n        status = IdxStatus.SUCCESS;\n        shouldClearTransaction = true;\n      }\n    }\n  } catch (err) {\n    error = err;\n    status = IdxStatus.FAILURE;\n    shouldClearTransaction = true;\n  }\n\n  if (shouldClearTransaction) {\n    authClient.transactionManager.clear();\n  }\n  \n  return {\n    _idxResponse: idxResponse, \n    status,\n    ...(meta && { meta }),\n    ...(enabledFeatures && { enabledFeatures }),\n    ...(availableSteps && { availableSteps }),\n    ...(tokens && { tokens: tokens.tokens }),\n    ...(nextStep && { nextStep }),\n    ...(messages && { messages }),\n    ...(error && { error }),\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ReEnrollAuthenticator,\n  RedirectIdp,\n  AuthenticatorEnrollmentData,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorVerificationData,\n} from '../remediators';\n\nexport const AuthenticationFlow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'redirect-idp': RedirectIdp\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuth } from '../../types';\nimport { Remediator, RemediationValues, SkipValues } from '../remediators';\nimport { getTransactionMeta, saveTransactionMeta } from '../transactionMeta';\nimport { IdxRemediation } from '../types/idx-js';\n\nexport class FlowMonitor {\n  previousRemediator: Remediator;\n  authClient: OktaAuth;\n\n  constructor(authClient) {\n    this.authClient = authClient;\n  }\n\n  // detect in-memory loop\n  loopDetected(remediator: Remediator): boolean {\n    if (!this.previousRemediator) {\n      this.previousRemediator = remediator;\n      return false;\n    }\n\n    if (this.previousRemediator.getName() === remediator.getName()) {\n      return true;\n    }\n\n    this.previousRemediator = remediator;\n    return false;\n  }\n\n  isRemediatorCandidate(\n    // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n    remediator: Remediator, remediations?: IdxRemediation[], values?: RemediationValues & SkipValues\n  ): boolean {\n    const remediatorName = remediator.getName();\n    if (!values.skip && remediatorName === 'skip') {\n      return false;\n    }\n    if (values.skip && remediatorName !== 'skip') {\n      return false;\n    }\n    return true;\n  }\n\n  async trackRemediations(name: string) {\n    let meta = await getTransactionMeta(this.authClient);\n    const remediations = meta.remediations || [];\n    meta = { \n      ...meta, \n      remediations: [...remediations, name]\n    };\n    saveTransactionMeta(this.authClient, meta);\n  }\n\n  isFinished(): Promise<boolean> {\n    return Promise.resolve(true);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { FlowMonitor } from './FlowMonitor';\n\nexport class AuthenticationFlowMonitor extends FlowMonitor {\n  isRemediatorCandidate(remediator, remediations?, values?) {\n    const prevRemediatorName = this.previousRemediator?.getName();\n    const remediatorName = remediator.getName();\n    \n    if (remediatorName === 'select-authenticator-authenticate' \n      && ['select-authenticator-authenticate'].includes(prevRemediatorName)) {\n      return false;\n    }\n\n    if (remediatorName === 'select-authenticator-authenticate' \n      && remediations.some(({ name }) => name === 'challenge-authenticator')) {\n      return false;\n    }\n\n    if (remediatorName === 'select-authenticator-enroll' \n      && [\n          'select-authenticator-enroll', \n          'authenticator-enrollment-data'\n        ].includes(prevRemediatorName)) {\n      return false;\n    }\n\n    return super.isRemediatorCandidate(remediator, remediations, values);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  AuthenticatorVerificationData,\n  ResetAuthenticator,\n  ReEnrollAuthenticator,\n} from '../remediators';\n\nexport const PasswordRecoveryFlow: RemediationFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { FlowMonitor } from './FlowMonitor';\nimport { getTransactionMeta } from '../transactionMeta';\n\nexport class PasswordRecoveryFlowMonitor extends FlowMonitor {\n  isRemediatorCandidate(remediator, remediations?, values?) {\n    const prevRemediatorName = this.previousRemediator?.getName();\n    const remediatorName = remediator.getName();\n    \n    if (remediatorName === 'select-authenticator-authenticate' \n      && [\n        'select-authenticator-authenticate',\n        'reenroll-authenticator'\n      ].includes(prevRemediatorName)) {\n      return false;\n    }\n\n    if (remediatorName === 'select-authenticator-authenticate' \n      && remediations.some(({ name }) => name === 'challenge-authenticator')) {\n      return false;\n    }\n\n    return super.isRemediatorCandidate(remediator, remediations, values);\n  }\n\n  async isFinished() {\n    const { remediations }  = await getTransactionMeta(this.authClient);\n    if (!remediations.includes('reset-authenticator')) {\n      return false;\n    }\n\n    return await super.isFinished();\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  SelectEnrollProfile,\n  EnrollProfile,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorEnrollmentData,\n  Skip,\n} from '../remediators';\n\nexport const RegistrationFlow: RemediationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { FlowMonitor } from './FlowMonitor';\n\nexport class RegistrationFlowMonitor extends FlowMonitor {\n  isRemediatorCandidate(remediator, remediations?, values?) {\n    const prevRemediatorName = this.previousRemediator?.getName();\n    const remediatorName = remediator.getName();\n    if (remediatorName === 'select-authenticator-enroll' \n      && [\n          'select-authenticator-enroll', \n          'authenticator-enrollment-data'\n        ].includes(prevRemediatorName)) {\n      return false;\n    }\n\n    return super.isRemediatorCandidate(remediator, remediations, values);\n  }\n}\n","import { OktaAuth, FlowIdentifier } from '../../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { AuthenticationFlowMonitor } from './AuthenticationFlowMonitor';\nimport { FlowMonitor } from './FlowMonitor';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { PasswordRecoveryFlowMonitor } from './PasswordRecoveryFlowMonitor';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { RegistrationFlowMonitor } from './RegistrationFlowMonitor';\nimport { RemediationFlow } from './RemediationFlow';\n\nexport interface FlowSpecification {\n  flow: FlowIdentifier;\n  remediators: RemediationFlow;\n  flowMonitor: FlowMonitor;\n  actions?: string[];\n}\n\nexport function getFlowSpecification(oktaAuth: OktaAuth, flow: FlowIdentifier = 'proceed'): FlowSpecification {\n  let remediators, flowMonitor, actions;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      flowMonitor = new RegistrationFlowMonitor(oktaAuth);\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      flowMonitor = new PasswordRecoveryFlowMonitor(oktaAuth);\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      break;\n    default:\n      // authenticate\n      remediators = AuthenticationFlow;\n      flowMonitor = new AuthenticationFlowMonitor(oktaAuth);\n      break;\n  }\n  return { flow, remediators, flowMonitor, actions };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuth,\n  IdxOptions,\n  IdxTransaction,\n} from '../types';\nimport { run } from './run';\nimport { \n  IdentifyValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  ReEnrollAuthenticatorValues,\n  AuthenticatorEnrollmentDataValues,\n  SelectAuthenticatorEnrollValues,\n  EnrollAuthenticatorValues,\n} from './remediators';\nimport { getFlowSpecification } from './flow';\n\nexport type AuthenticationOptions = IdxOptions \n  & IdentifyValues \n  & SelectAuthenticatorAuthenticateValues \n  & SelectAuthenticatorEnrollValues\n  & ChallengeAuthenticatorValues \n  & ReEnrollAuthenticatorValues\n  & AuthenticatorEnrollmentDataValues\n  & EnrollAuthenticatorValues;\n\nexport async function authenticate(\n  authClient: OktaAuth, options: AuthenticationOptions\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'authenticate');\n  return run(authClient, { \n    ...options, \n    ...flowSpec\n  });\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuth, IdxOptions } from '../types';\nimport { run } from './run';\n\nexport type CancelOptions = IdxOptions;\n\nexport async function cancel (authClient: OktaAuth, options: CancelOptions) {\n  return run(authClient, {\n    ...options,\n    actions: ['cancel']\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuth,\n  IdxTransaction,\n} from '../types';\nimport { run } from './run';\nimport { AuthenticationOptions } from './authenticate';\nimport { RegistrationOptions } from './register';\nimport { PasswordRecoveryOptions } from './recoverPassword';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { getFlowSpecification } from './flow';\nimport { AuthSdkError } from '../errors';\n\nexport type ProceedOptions = AuthenticationOptions\n  & RegistrationOptions\n  & PasswordRecoveryOptions;\n\nexport function canProceed(authClient: OktaAuth, options?: { state?: string }) {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!meta;\n}\n\nexport async function proceed(\n  authClient: OktaAuth,\n  options: ProceedOptions = {}\n): Promise<IdxTransaction> {\n  const { stateTokenExternalId, state } = options;\n  const meta = getSavedTransactionMeta(authClient, { state });\n\n  // Proceed always needs saved transaction meta, except in the case of email verify callback\n  if (!meta && !stateTokenExternalId) {\n    throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n  }\n\n  // Determine the flow specification based on the saved flow\n  const flowSpec = getFlowSpecification(authClient, meta?.flow);\n\n  return run(authClient, { \n    ...options, \n    ...flowSpec\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { OktaAuth, IdxOptions, IdxTransaction } from '../types';\n\n// This method only resolves { status: IdxStatus.PENDING } if transaction has already started\nexport async function startTransaction(\n  authClient: OktaAuth, \n  options: IdxOptions = {}\n): Promise<IdxTransaction> {\n  // Clear IDX response cache and saved transaction meta (if any)\n  authClient.transactionManager.clear();\n\n  return run(authClient, options);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { transactionMetaExist } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { \n  EnrollProfileValues,\n  SelectAuthenticatorEnrollValues,\n  EnrollAuthenticatorValues,\n  AuthenticatorEnrollmentDataValues,\n  SkipValues,\n} from './remediators';\nimport { getFlowSpecification } from './flow';\nimport { AuthSdkError } from '../errors';\nimport { \n  IdxOptions, \n  IdxTransaction, \n  OktaAuth, \n  IdxFeature,\n  IdxStatus,\n} from '../types';\n\nexport type RegistrationOptions = IdxOptions \n  & EnrollProfileValues \n  & SelectAuthenticatorEnrollValues \n  & EnrollAuthenticatorValues \n  & AuthenticatorEnrollmentDataValues \n  & SkipValues;\n\nexport async function register(\n  authClient: OktaAuth, options: RegistrationOptions\n): Promise<IdxTransaction> {\n  // Only check at the beginning of the transaction\n  if (!transactionMetaExist(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, { flow: 'register', ...options });\n    if (enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      const error = new AuthSdkError('Registration is not supported based on your current org configuration.');\n      return { status: IdxStatus.FAILURE, error };\n    }\n  }\n\n  const flowSpec = getFlowSpecification(authClient, 'register');\n  return run(authClient, { \n    ...options, \n    ...flowSpec\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport {\n  IdentifyValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  AuthenticatorVerificationDataValues,\n  ResetAuthenticatorValues,\n  ReEnrollAuthenticatorValues,\n} from './remediators';\nimport { getFlowSpecification } from './flow';\nimport { \n  OktaAuth, \n  IdxOptions, \n  IdxTransaction,\n} from '../types';\n\nexport type PasswordRecoveryOptions = IdxOptions \n  & IdentifyValues \n  & SelectAuthenticatorAuthenticateValues \n  & ChallengeAuthenticatorValues \n  & ResetAuthenticatorValues\n  & AuthenticatorVerificationDataValues\n  & ReEnrollAuthenticatorValues;\n\nexport async function recoverPassword(\n  authClient: OktaAuth, options: PasswordRecoveryOptions\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n  return run(\n    authClient, \n    { \n      ...options,\n      ...flowSpec,\n    }\n  );\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { OktaAuth } from '..';\nimport {IdxTransactionMeta} from '../types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuth, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    throw new OAuthError(error, searchParams.get('error_description'));\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n// BETA - SUBJECT TO CHANGE\n// Currently we must modify request headers using the single instance of `idx.client.interceptors` exported from IDX-JS\n// This means that multiple instances of OktaAuth will see the same header modifications\n// TODO: use AuthJS http agent for IDX API requests. OKTA-417473\nimport { OktaAuth } from '../types';\nimport idx from '@okta/okta-idx-js';\nexport function setGlobalRequestInterceptor(fn) {\n  idx.client.interceptors.request.use(fn);\n}\n\n// A factory which returns a function that can be passed to `setGlobalRequestInterceptor`\nexport function createGlobalRequestInterceptor(sdk: OktaAuth) {\n  return function (requestConfig) {\n    // Set user-agent and any other custom headers set in the options\n    var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n    const headers = Object.assign({\n      ...oktaUserAgentHeader\n    }, sdk.options.headers);\n    Object.keys(headers).forEach(name => {\n      requestConfig.headers[name] = headers[name];\n    });\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* global SDK_VERSION */\nimport { isBrowser } from './features';\n\nexport class OktaUserAgent {\n  private environments: string[];\n\n  constructor() {\n    // add base sdk env\n    this.environments = [`okta-auth-js/${SDK_VERSION}`];\n  }\n\n  addEnvironment(env: string) {\n    this.environments.push(env);\n  }\n\n  getHttpHeader() {\n    this.maybeAddNodeEnvironment();\n    return { 'X-Okta-User-Agent-Extended': this.environments.join(' ') };\n  }\n\n  getVersion() {\n    return SDK_VERSION;\n  }\n\n  private maybeAddNodeEnvironment() {\n    if (isBrowser() || !process || !process.versions) {\n      return;\n    }\n    const { node: version } = process.versions;\n    this.environments.push(`nodejs/${version}`);\n  }\n}\n","/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* SDK_VERSION is defined in webpack config */ \n/* global window, SDK_VERSION */\n\nimport { \n  DEFAULT_MAX_CLOCK_SKEW, \n  REFERRER_PATH_STORAGE_KEY\n} from './constants';\nimport * as constants from './constants';\nimport {\n  OktaAuth as SDKInterface,\n  OktaAuthOptions, \n  AccessToken, \n  IDToken,\n  RefreshToken,\n  TokenAPI, \n  FeaturesAPI, \n  SignoutAPI, \n  FingerprintAPI,\n  UserClaims, \n  SigninWithRedirectOptions,\n  SigninWithCredentialsOptions,\n  SignoutOptions,\n  Tokens,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  TransactionAPI,\n  SessionAPI,\n  SigninAPI,\n  PkceAPI,\n  SigninOptions,\n  IdxAPI,\n  SignoutRedirectUrlOptions,\n  HttpAPI,\n  FlowIdentifier,\n} from './types';\nimport {\n  transactionStatus,\n  resumeTransaction,\n  transactionExists,\n  introspect,\n  postToTransaction,\n  AuthTransaction\n} from './tx';\nimport PKCE from './oidc/util/pkce';\nimport {\n  closeSession,\n  sessionExists,\n  getSession,\n  refreshSession,\n  setCookieAndRedirect\n} from './session';\nimport {\n  getOAuthUrls,\n  getWithoutPrompt,\n  getWithPopup,\n  getWithRedirect,\n  isLoginRedirect,\n  parseFromUrl,\n  decodeToken,\n  revokeToken,\n  renewToken,\n  renewTokens,\n  renewTokensWithRefresh,\n  getUserInfo,\n  verifyToken,\n  prepareTokenParams,\n  exchangeCodeForTokens,\n  isInteractionRequiredError,\n  isInteractionRequired,\n} from './oidc';\nimport { isBrowser } from './features';\nimport * as features from './features';\nimport browserStorage from './browser/browserStorage';\nimport { \n  toQueryString, \n  toAbsoluteUrl,\n  clone,\n  isEmailVerifyCallback,\n  EmailVerifyCallbackResponse,\n  parseEmailVerifyCallback\n} from './util';\nimport { getUserAgent } from './builderUtil';\nimport { TokenManager } from './TokenManager';\nimport { get, setRequestHeader } from './http';\nimport PromiseQueue from './PromiseQueue';\nimport fingerprint from './browser/fingerprint';\nimport { AuthStateManager } from './AuthStateManager';\nimport StorageManager from './StorageManager';\nimport TransactionManager from './TransactionManager';\nimport { buildOptions } from './options';\nimport {\n  interact,\n  introspect as introspectV2,\n  authenticate,\n  cancel,\n  proceed,\n  register,\n  recoverPassword,\n  startTransaction,\n  handleInteractionCodeRedirect,\n  canProceed,\n} from './idx';\nimport { createGlobalRequestInterceptor, setGlobalRequestInterceptor } from './idx/headers';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { parseOAuthResponseFromUrl } from './oidc/parseFromUrl';\n\nconst Emitter = require('tiny-emitter');\n\nclass OktaAuth implements SDKInterface, SigninAPI, SignoutAPI {\n  options: OktaAuthOptions;\n  storageManager: StorageManager;\n  transactionManager: TransactionManager;\n  tx: TransactionAPI;\n  idx: IdxAPI;\n  // keep this field to compatible with released downstream SDK versions\n  // TODO: remove in version 6\n  // JIRA: https://oktainc.atlassian.net/browse/OKTA-419417\n  userAgent: string;\n  session: SessionAPI;\n  pkce: PkceAPI;\n  static features: FeaturesAPI;\n  features: FeaturesAPI;\n  token: TokenAPI;\n  _tokenQueue: PromiseQueue;\n  emitter: typeof Emitter;\n  tokenManager: TokenManager;\n  authStateManager: AuthStateManager;\n  http: HttpAPI;\n  fingerprint: FingerprintAPI;\n  _oktaUserAgent: OktaUserAgent;\n  _pending: { handleLogin: boolean };\n  constructor(args: OktaAuthOptions) {\n    const options = this.options = buildOptions(args);\n    this.storageManager = new StorageManager(options.storageManager, options.cookies, options.storageUtil);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager,\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n  \n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: (name) => {\n          const storage = options.storageUtil.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspect.bind(null, this)\n    };\n\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n\n    // Add shims for compatibility, these will be removed in next major version. OKTA-362589\n    Object.assign(this.options.storageUtil, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager),\n    });\n\n    this._pending = { handleLogin: false };\n\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin), // allow relative URIs\n      });\n      this.userAgent = getUserAgent(args, `okta-auth-js/${SDK_VERSION}`);\n    } else {\n      this.userAgent = getUserAgent(args, `okta-auth-js-server/${SDK_VERSION}`);\n    }\n\n    // Digital clocks will drift over time, so the server\n    // can misalign with the time reported by the browser.\n    // The maxClockSkew allows relaxing the time-based\n    // validation of tokens (in seconds, not milliseconds).\n    // It currently defaults to 300, because 5 min is the\n    // default maximum tolerance allowed by Kerberos.\n    // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n\n    // As some end user's devices can have their date \n    // and time incorrectly set, allow for the disabling\n    // of the jwt liftetime validation\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n\n    this._tokenQueue = new PromiseQueue();\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirect.bind(null, this),\n      parseFromUrl: parseFromUrl.bind(null, this),\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: getUserInfo.bind(null, this),\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    // Wrap all async token API methods using MethodQueue to avoid issues with concurrency\n    const syncMethods = ['decode', 'isLoginRedirect'];\n    Object.keys(this.token).forEach(key => {\n      if (syncMethods.indexOf(key) >= 0) { // sync methods should not be wrapped\n        return;\n      }\n      var method = this.token[key];\n      this.token[key] = PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    });\n    \n    Object.assign(this.token.getWithRedirect, {\n      // This is exposed so we can set window.location in our tests\n      _setLocation: function(url) {\n        window.location = url;\n      }\n    });\n    Object.assign(this.token.parseFromUrl, {\n      // This is exposed so we can mock getting window.history in our tests\n      _getHistory: function() {\n        return window.history;\n      },\n\n      // This is exposed so we can mock getting window.location in our tests\n      _getLocation: function() {\n        return window.location;\n      },\n\n      // This is exposed so we can mock getting window.document in our tests\n      _getDocument: function() {\n        return window.document;\n      }\n    });\n\n    // IDX\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspectV2.bind(null, this),\n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      proceed: proceed.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n      startTransaction: startTransaction.bind(null, this),\n      setFlow: (flow: FlowIdentifier) => {\n        this.options.flow = flow;\n      },\n      getFlow: (): FlowIdentifier => {\n        return this.options.flow;\n      },\n      canProceed: canProceed.bind(null, this),\n    };\n    setGlobalRequestInterceptor(createGlobalRequestInterceptor(this)); // to pass custom headers to IDX endpoints\n\n    // HTTP\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n\n    // Fingerprint API\n    this.fingerprint = fingerprint.bind(null, this);\n\n    this.emitter = new Emitter();\n\n    // TokenManager\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n\n    // AuthStateManager\n    this.authStateManager = new AuthStateManager(this);\n  }\n\n  start() {\n    this.tokenManager.start();\n    if (!this.token.isLoginRedirect()) {\n      this.authStateManager.updateAuthState();\n    }\n  }\n\n  stop() {\n    this.tokenManager.stop();\n  }\n\n  setHeaders(headers) {\n    this.options.headers = Object.assign({}, this.options.headers, headers);\n  }\n\n  // ES6 module users can use named exports to access all symbols\n  // CommonJS module users (CDN) need all exports on this object\n\n  // Utility methods for interaction code flow\n  isInteractionRequired(hashOrSearch?: string): boolean {\n    return isInteractionRequired(this, hashOrSearch);\n  }\n\n  isInteractionRequiredError(error: Error): boolean {\n    return isInteractionRequiredError(error);\n  }\n\n  // Utility methods for email verify callback\n  isEmailVerifyCallback(urlPath: string): boolean {\n    return isEmailVerifyCallback(urlPath);\n  }\n\n  parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n    return parseEmailVerifyCallback(urlPath);\n  }\n\n  async signIn(opts: SigninOptions): Promise<AuthTransaction> {\n    // TODO: support interaction code flow\n    // Authn V1 flow\n    return this.signInWithCredentials(opts as SigninWithCredentialsOptions);\n  }\n\n  async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthTransaction> {\n    opts = clone(opts || {});\n    const _postToTransaction = (options?) => {\n      delete opts.sendFingerprint;\n      return postToTransaction(this, '/api/v1/authn', opts, options);\n    };\n    if (!opts.sendFingerprint) {\n      return _postToTransaction();\n    }\n    return this.fingerprint()\n    .then(function(fingerprint) {\n      return _postToTransaction({\n        headers: {\n          'X-Device-Fingerprint': fingerprint\n        }\n      });\n    });\n  }\n\n  async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n    const { originalUri, ...additionalParams } = opts;\n    if(this._pending.handleLogin) { \n      // Don't trigger second round\n      return;\n    }\n\n    this._pending.handleLogin = true;\n    try {\n      // Trigger default signIn redirect flow\n      if (originalUri) {\n        this.setOriginalUri(originalUri);\n      }\n      const params = Object.assign({\n        // TODO: remove this line when default scopes are changed OKTA-343294\n        scopes: this.options.scopes || ['openid', 'email', 'profile']\n      }, additionalParams);\n      await this.token.getWithRedirect(params);\n    } finally {\n      this._pending.handleLogin = false;\n    }\n  }\n  \n  // Ends the current Okta SSO session without redirecting to Okta.\n  closeSession(): Promise<object> {\n    // Clear all local tokens\n    this.tokenManager.clear();\n  \n    return this.session.close() // DELETE /api/v1/sessions/me\n    .catch(function(e) {\n      if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n        // Session does not exist or has already been closed\n        return null;\n      }\n      throw e;\n    });\n  }\n  \n  // Revokes the access token for the application session\n  async revokeAccessToken(accessToken?: AccessToken): Promise<object> {\n    if (!accessToken) {\n      accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n      this.tokenManager.remove(accessTokenKey);\n    }\n    // Access token may have been removed. In this case, we will silently succeed.\n    if (!accessToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(accessToken);\n  }\n\n  // Revokes the refresh token for the application session\n  async revokeRefreshToken(refreshToken?: RefreshToken): Promise<object> {\n    if (!refreshToken) {\n      refreshToken = (await this.tokenManager.getTokens()).refreshToken as RefreshToken;\n      const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n      this.tokenManager.remove(refreshTokenKey);\n    }\n    // Refresh token may have been removed. In this case, we will silently succeed.\n    if (!refreshToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(refreshToken);\n  }\n\n  getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n    let {\n      idToken,\n      postLogoutRedirectUri,\n      state,\n    } = options;\n    if (!idToken) {\n      idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n    if (!idToken) {\n      return '';\n    }\n    if (!postLogoutRedirectUri) {\n      postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n    }\n\n    const logoutUrl = getOAuthUrls(this).logoutUrl;\n    const idTokenHint = idToken.idToken; // a string\n    let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n    if (postLogoutRedirectUri) {\n      logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n    } \n    // State allows option parameters to be passed to logout redirect uri\n    if (state) {\n      logoutUri += '&state=' + encodeURIComponent(state);\n    }\n\n    return logoutUri;\n  }\n\n  // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n  async signOut(options?: SignoutOptions) {\n    options = Object.assign({}, options);\n  \n    // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n    var defaultUri = window.location.origin;\n    var currentUri = window.location.href;\n    var postLogoutRedirectUri = options.postLogoutRedirectUri\n      || this.options.postLogoutRedirectUri\n      || defaultUri;\n  \n    var accessToken = options.accessToken;\n    var refreshToken = options.refreshToken;\n    var revokeAccessToken = options.revokeAccessToken !== false;\n    var revokeRefreshToken = options.revokeRefreshToken !== false;\n  \n    if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n      refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n    }\n\n    if (revokeAccessToken && typeof accessToken === 'undefined') {\n      accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n    }\n  \n    if (!options.idToken) {\n      options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n\n    // Clear all local tokens\n    this.tokenManager.clear();\n\n    if (revokeRefreshToken && refreshToken) {\n      await this.revokeRefreshToken(refreshToken);\n    }\n\n    if (revokeAccessToken && accessToken) {\n      await this.revokeAccessToken(accessToken);\n    }\n\n    const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n    // No logoutUri? This can happen if the storage was cleared.\n    // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n    if (!logoutUri) {\n      return this.closeSession() // can throw if the user cannot be signed out\n      .then(function() {\n        if (postLogoutRedirectUri === currentUri) {\n          window.location.reload(); // force a hard reload if URI is not changing\n        } else {\n          window.location.assign(postLogoutRedirectUri);\n        }\n      });\n    } else {\n      // Flow ends with logout redirect\n      window.location.assign(logoutUri);\n    }\n  }\n\n  webfinger(opts): Promise<object> {\n    var url = '/.well-known/webfinger' + toQueryString(opts);\n    var options = {\n      headers: {\n        'Accept': 'application/jrd+json'\n      }\n    };\n    return get(this, url, options);\n  }\n\n  //\n  // Common Methods from downstream SDKs\n  //\n\n  // Returns true if both accessToken and idToken are not expired\n  // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n  async isAuthenticated(): Promise<boolean> {\n\n    let { accessToken, idToken } = this.tokenManager.getTokensSync();\n    const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n    if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n      accessToken = null;\n      if (autoRenew) {\n        accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n      } else if (autoRemove) {\n        this.tokenManager.remove('accessToken');\n      }\n    }\n\n    if (idToken && this.tokenManager.hasExpired(idToken)) {\n      idToken = null;\n      if (autoRenew) {\n        idToken = await this.tokenManager.renew('idToken') as IDToken;\n      } else if (autoRemove) {\n        this.tokenManager.remove('idToken');\n      }\n    }\n\n    return !!(accessToken && idToken);\n  }\n\n  async getUser(): Promise<UserClaims> {\n    const { idToken, accessToken } = this.tokenManager.getTokensSync();\n    return this.token.getUserInfo(accessToken, idToken);\n  }\n\n  getIdToken(): string | undefined {\n    const { idToken } = this.tokenManager.getTokensSync();\n    return idToken ? idToken.idToken : undefined;\n  }\n\n  getAccessToken(): string | undefined {\n    const { accessToken } = this.tokenManager.getTokensSync();\n    return accessToken ? accessToken.accessToken : undefined;\n  }\n\n  getRefreshToken(): string | undefined {\n    const { refreshToken } = this.tokenManager.getTokensSync();\n    return refreshToken ? refreshToken.refreshToken : undefined;\n  }\n\n  /**\n   * Store parsed tokens from redirect url\n   */\n  async storeTokensFromRedirect(): Promise<void> {\n    const { tokens } = await this.token.parseFromUrl();\n    this.tokenManager.setTokens(tokens);\n  }\n\n  setOriginalUri(originalUri: string, state?: string): void {\n    // always store in session storage\n    const sessionStorage = browserStorage.getSessionStorage();\n    sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n\n    // to support multi-tab flows, set a state in constructor or pass as param\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.setItem(state, originalUri);\n    }\n  }\n\n  getOriginalUri(state?: string): string {\n    // Prefer shared storage (if state is available)\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      const originalUri = sharedStorage.getItem(state);\n      if (originalUri) {\n        return originalUri;\n      }\n    }\n\n    // Try to load from session storage\n    const storage = browserStorage.getSessionStorage();\n    return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) : undefined;\n  }\n\n  removeOriginalUri(state?: string): void {\n    // Remove from sessionStorage\n    const storage = browserStorage.getSessionStorage();\n    storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n\n    // Also remove from shared storage\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.removeItem(state);\n    }\n  }\n\n  isLoginRedirect(): boolean {\n    return isLoginRedirect(this);\n  }\n\n  async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n    let state = this.options.state;\n\n    // Store tokens and update AuthState by the emitted events\n    if (tokens) {\n      this.tokenManager.setTokens(tokens);\n      originalUri = originalUri || this.getOriginalUri(this.options.state);\n    } else if (this.isLoginRedirect()) {\n      // For redirect flow, get state from the URL and use it to retrieve the originalUri\n      const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n      state = oAuthResponse.state;\n      originalUri = originalUri || this.getOriginalUri(state);\n      await this.storeTokensFromRedirect();\n    } else {\n      return; // nothing to do\n    }\n    \n    // ensure auth state has been updated\n    await this.authStateManager.updateAuthState();\n\n    // clear originalUri from storage\n    this.removeOriginalUri(state);\n\n    // Redirect to originalUri\n    const { restoreOriginalUri } = this.options;\n    if (restoreOriginalUri) {\n      await restoreOriginalUri(this, originalUri);\n    } else {\n      window.location.replace(originalUri);\n    }\n  }\n\n  isPKCE(): boolean {\n    return !!this.options.pkce;\n  }\n\n  hasResponseType(responseType: string): boolean {\n    let hasResponseType = false;\n    if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n      hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n    } else {\n      hasResponseType = this.options.responseType === responseType;\n    }\n    return hasResponseType;\n  }\n\n  isAuthorizationCodeFlow(): boolean {\n    return this.hasResponseType('code');\n  }\n\n  // { username, password, (relayState), (context) }\n  // signIn(opts: SignInWithCredentialsOptions): Promise<AuthTransaction> {\n  //   return postToTransaction(this, '/api/v1/authn', opts);\n  // }\n\n  getIssuerOrigin(): string {\n    // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n    return this.options.issuer.split('/oauth2/')[0];\n  }\n\n  // { username, (relayState) }\n  forgotPassword(opts): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  }\n\n  // { username, (relayState) }\n  unlockAccount(opts: ForgotPasswordOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  }\n\n  // { recoveryToken }\n  verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  }\n}\n\n// Hoist feature detection functions to static type\nOktaAuth.features = OktaAuth.prototype.features = features;\n\n// Also hoist values and utility functions for CommonJS users\nObject.assign(OktaAuth, {\n  constants,\n  isInteractionRequiredError\n});\n\nexport default OktaAuth;"],"names":["CustomError","message","Object","setPrototypeOf","prototype","Error","AuthApiError","err","xhr","errorSummary","name","errorCode","errorLink","errorId","errorCauses","AuthPollStopError","AuthSdkError","msg","OAuthError","summary","isAuthApiError","obj","a","str","atob","b","btoa","c","crypto","stringToBase64Url","b64","base64ToBase64Url","replace","base64UrlToBase64","b64u","base64UrlToString","length","utf8","decodeURIComponent","escape","e","stringToBuffer","buffer","Uint8Array","i","charCodeAt","base64UrlDecode","getOidcHash","TextEncoder","encode","webcrypto","subtle","digest","then","arrayBuffer","intBuffer","firstHalf","slice","hash","String","fromCharCode","apply","getNativeConsole","window","console","undefined","getConsole","nativeConsole","log","warn","group","groupEnd","text","deprecate","deprecateWrap","fn","arguments","urlParamsToObject","hashOrSearch","plus2space","paramSplit","fragment","charAt","substring","param","exec","key","value","isEmailVerifyCallback","urlPath","test","parseEmailVerifyCallback","isoToUTCString","parts","match","isoTime","Date","UTC","isoDate","toUTCString","genRandomString","randomCharset","random","cl","Math","floor","delay","ms","Promise","resolve","setTimeout","bind","ctx","additionalArgs","Array","call","args","concat","extend","obj1","objArray","forEach","prop","hasOwnProperty","removeNils","cleaned","clone","JSON","stringify","parse","omit","newobj","props","p","indexOf","find","collection","searchParams","item","found","getLink","linkName","altName","_links","link","isString","toString","isObject","isNumber","isFunction","isPromise","finally","isAbsoluteUrl","url","toAbsoluteUrl","baseUrl","removeTrailingSlash","toRelativeUrl","toQueryString","push","encodeURIComponent","join","path","trimmed","verifyToken","idToken","format","algo","extractable","usages","use","importKey","cryptoKey","jwt","split","payload","b64Signature","signature","verify","STATE_TOKEN_KEY_NAME","DEFAULT_POLLING_DELAY","DEFAULT_MAX_CLOCK_SKEW","DEFAULT_CACHE_DURATION","REDIRECT_OAUTH_PARAMS_NAME","REDIRECT_STATE_COOKIE_NAME","REDIRECT_NONCE_COOKIE_NAME","TOKEN_STORAGE_NAME","CACHE_STORAGE_NAME","PKCE_STORAGE_NAME","TRANSACTION_STORAGE_NAME","SHARED_TRANSACTION_STORAGE_NAME","ORIGINAL_URI_STORAGE_NAME","IDX_RESPONSE_STORAGE_NAME","ACCESS_TOKEN_STORAGE_KEY","ID_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","REFERRER_PATH_STORAGE_KEY","MIN_VERIFIER_LENGTH","MAX_VERIFIER_LENGTH","DEFAULT_CODE_CHALLENGE_METHOD","IDX_API_VERSION","setRequestHeader","authClient","headerName","headerValue","options","headers","httpRequest","sdk","method","saveAuthnState","accessToken","withCredentials","storageUtil","storage","httpCache","storageManager","getHttpCache","cookies","cacheResponse","cacheContents","getStorage","cachedResponse","now","expiresAt","response","oktaUserAgentHeader","_oktaUserAgent","getHttpHeader","assign","ajaxOptions","data","res","httpRequestClient","resp","responseText","stateToken","delete","set","updateStorage","catch","serverErr","status","transformErrorXHR","get","getIssuerOrigin","getOptions","post","postOptions","addStateToken","builtArgs","getStateToken","getPollFn","ref","rememberDevice","autoPush","transactionCallBack","pollLink","pollFn","opts","reject","href","isPolling","retryCount","recursivePoll","pollRes","factorResult","delayFn","AuthTransaction","delayLength","pow","interactionHandle","flattenEmbedded","cancel","link2fn","isArray","lk","hints","allow","factorType","provider","params","profile","updatePhone","postToTransaction","links2fns","fns","type","poll","objArr","o","ol","embedded","_embedded","transactionStatus","resumeTransaction","tx","exists","_get","introspect","transactionStep","transactionExists","TransactionState","dec2hex","dec","substr","getRandomString","ceil","getRandomValues","from","generateVerifier","prefix","verifier","computeChallenge","sessionExists","session","getSession","refresh","user","closeSession","refreshSession","setCookieAndRedirect","sessionToken","redirectUrl","location","checkAccountSetupComplete","token","convertTokenParamsToOAuthParams","tokenParams","clientId","responseType","oauthParams","codeChallenge","codeChallengeMethod","display","idp","idpScope","loginHint","maxAge","nonce","prompt","redirectUri","responseMode","state","mayBeArray","scopes","scope","buildAuthorizeParams","oauthQueryParams","extraParams","validateOptions","authorizationCode","interactionCode","codeVerifier","getPostData","code","clientSecret","postToTokenEndpoint","urls","tokenUrl","postRefreshToken","refreshToken","entries","client_id","grant_type","refresh_token","map","getWellKnown","issuer","authServerUri","getKey","kid","wellKnown","jwksUri","cachedKey","keys","clearStorage","addListener","eventTarget","addEventListener","attachEvent","removeListener","removeEventListener","detachEvent","loadFrame","src","iframe","document","createElement","style","body","appendChild","loadPopup","title","popupTitle","appearance","open","addPostMessageListener","timeout","responseHandler","timeoutId","msgReceivedOrTimeout","origin","clearTimeout","generateState","generateNonce","getIssuer","getOAuthBaseUrl","getOAuthDomain","domain","getOAuthUrls","authorizeUrl","userinfoUrl","logoutUrl","revokeUrl","isWindowsPhone","isBrowser","isIE11OrLess","documentMode","getUserAgent","navigator","userAgent","isFingerprintSupported","agent","isPopupPostMessageSupported","isIE8or9","postMessage","isTokenVerifySupported","hasTextEncoder","isPKCESupported","isHTTPS","protocol","isLocalhost","hostname","getDefaultTokenParams","pkce","ignoreSignature","defaultRedirectUri","isInteractionRequiredError","error","oauthError","isAuthorizationCodeError","authApiError","errorResponse","responseJSON","hasTokensInHash","hasAuthorizationCode","hasInteractionCode","hasErrorInUrl","isRedirectUri","uri","authParams","isCodeFlow","getHashOrSearch","codeFlow","useQuery","search","isLoginRedirect","hasCode","isInteractionRequired","prepareTokenParams","defaults","features","errorMessage","methods","clonedParams","isSameRefreshToken","isRefreshTokenError","validateClaims","claims","validationParams","aud","iss","iat","exp","ignoreLifetime","maxClockSkew","isObjectWithProperties","values","isOAuthTransactionMeta","isPKCETransactionMeta","isIdxTransactionMeta","isCustomAuthTransactionMeta","isAllStringValues","isTransactionMeta","IdxStatus","AuthenticatorKey","IdxFeature","isToken","isAccessToken","isIDToken","isRefreshToken","validateToken","decodeToken","decodedToken","header","revokeToken","token_type_hint","creds","exchangeCodeForTokens","getTokenOptions","handleResponseOptions","handleOAuthResponse","transactionManager","clear","configuredIssuer","validationOptions","sdkCrypto","valid","at_hash","validateResponse","interaction_code","tokenDict","expiresIn","expires_in","tokenType","token_type","access_token","id_token","accessJwt","decode","Number","idJwt","idTokenObj","tokens","getToken","popupWindow","sessionTokenOverrides","idpOverrides","requestUrl","endpoint","flowType","iframePromise","iframeEl","contains","parentElement","removeChild","oauthPromise","popupPromise","closePoller","setInterval","closed","clearInterval","close","getWithoutPrompt","renewTokensWithRefresh","refreshTokenObject","renewTokenParams","tokenResponse","tokenManager","updateRefreshToken","throwInvalidTokenError","getSingleToken","originalToken","renewToken","getTokensSync","renewTokens","getUserInfo","accessTokenObject","idTokenObject","getTokens","userInfo","sub","authenticateHeader","getResponseHeader","errorMatches","errorDescriptionMatches","errorDescription","getWithPopup","getWithRedirect","oauthMeta","save","oauth","_setLocation","removeHash","nativeHistory","parseFromUrl","_getHistory","nativeDoc","_getDocument","nativeLoc","_getLocation","replaceState","pathname","removeSearch","getResponseMode","defaultResponseMode","parseOAuthResponseFromUrl","paramStr","cleanOAuthResponseFromUrl","load","Cookies","require","getPKCEStorage","browserHasLocalStorage","getLocalStorage","testStorage","browserHasSessionStorage","getSessionStorage","testStorageType","storageType","supported","getStorageByType","storageProvider","getCookieStorage","getInMemoryStorage","findStorageType","types","curType","nextType","shift","localStorage","sessionStorage","secure","sameSite","sessionCookie","getItem","setItem","removeItem","useMultipleCookies","k","existingValues","storageKey","valueToStore","inMemoryStore","cookieOptions","expires","remove","assertValidConfig","isUrlRegex","RegExp","sdkValue","template","SdkClock","localOffset","parseInt","shouldThrottleRenew","renewTimeQueue","firstTime","lastTime","TokenService","onTokenExpiredHandler","autoRenew","emitError","renew","autoRemove","on","EVENT_EXPIRED","setExpireEventTimeoutAll","syncStorage","storageListener","newValue","oldValue","handleCrossTabsStorageChange","resetExpireEventTimeoutAll","emitEventsForCrossTabsStorageUpdate","syncTimeout","_storageEventDelay","clearExpireEventTimeoutAll","off","DEFAULT_OPTIONS","expireEarlySeconds","EVENT_RENEWED","EVENT_ADDED","EVENT_REMOVED","EVENT_ERROR","defaultState","expireTimeouts","renewPromise","TokenManager","emitter","storageOptions","getTokenStorage","clock","create","service","stop","start","expireTime","getExpireTime","emit","freshToken","oldToken","oldTokens","getTokensFromStorageValue","newTokens","newToken","emitAdded","emitRemoved","clearExpireEventTimeout","expireEventWait","max","expireEventTimeout","emitExpired","tokenStorage","setExpireEventTimeout","setStorage","getSync","filter","accessTokenCb","idTokenCb","refreshTokenCb","handleTokenCallback","getTokenType","handleAdded","handleRenewed","emitRenewed","handleRemoved","existingTokens","reduce","getStorageKeyByType","existingToken","removedToken","setTokens","tokenKey","PromiseQueue","queue","running","thisObject","run","queueItem","fingerprint","listener","promise","source","PCancelable","INITIAL_AUTH_STATE","DEFAULT_PENDING","updateAuthStatePromise","canceledTimes","EVENT_AUTH_STATE_CHANGE","MAX_PROMISE_CANCEL_TIMES","isSameAuthState","prevState","isAuthenticated","AuthStateManager","_sdk","_pending","_authState","_logOptions","_setLogOptions","event","updateAuthState","_prevAuthState","transformAuthState","devMode","emitAuthStateChange","authState","finalPromise","origPromise","curPromise","getAuthState","cancelablePromise","_","onCancel","shouldReject","emitAndResolve","isCanceled","handler","SavedObject","storageName","storageString","logServerSideMemoryStorageWarning","StorageManager","storageManagerOptions","sectionName","overrideOptions","storageTypes","idx","getOptionsForSection","transactionStorage","getTransactionStorage","transaction","val","isRawIdxResponse","version","isIdxResponse","rawIdxState","MAX_ENTRY_LIFETIME","pruneSharedStorage","sharedStorage","getSharedTansactionStorage","entry","age","dateCreated","saveTransactionToSharedStorage","meta","loadTransactionFromSharedStorage","clearTransactionFromSharedStorage","TransactionManager","legacyWidgetSupport","saveNonceCookie","saveStateCookie","saveParamsCookie","enableSharedStorage","clearIdxResponse","clearSharedStorage","clearLegacyOAuthParams","clearLegacyPKCE","muteWarning","cookieStorage","loadLegacyOAuthParams","pkceMeta","loadLegacyPKCE","getLegacyPKCEStorage","getLegacyOAuthParamsStorage","idxResponse","getIdxResponseStorage","readData","toLowerCase","json","formatResult","pair","result","fetchRequest","contentType","fetch","crossFetch","fetchPromise","credentials","ok","NodeCache","ServerCookies","nodeCache","ttl","del","ServerStorage","BROWSER_STORAGE","cache","SERVER_STORAGE","getCookieSettings","cookieSettings","getDefaultOptions","browserStorage","serverStorage","mergeOptions","buildOptions","postLogoutRedirectUri","useInteractionCodeFlow","restoreOriginalUri","createTransactionMeta","flow","getFlow","transactionMetaExist","existing","isTransactionMetaValid","getSavedTransactionMeta","getTransactionMeta","validExistingMeta","saveTransactionMeta","some","shouldValidateFlow","getResponse","interact","newMeta","useLastResponse","stateTokenExternalId","rawIdxResponse","loadIdxResponse","makeIdxState","getRemediator","idxRemediations","remediators","flowMonitor","remediator","remediatorCandidates","remediation","isRemeditionInFlow","includes","T","isRemediatorCandidate","canRemediate","isTerminalResponse","neededToProceed","canSkipFn","canResendFn","actions","actionName","getIdxMessages","messages","globalMessages","fieldMessages","getMessages","getNextStep","nextStep","canSkip","canResend","handleIdxError","idxState","terminal","getActionFromValues","action","resend","removeActionFromValues","remediate","actionFromValues","valuesWithoutExecutedAction","canceled","acc","curr","loopDetected","getName","getData","proceed","trackRemediations","getValuesAfterProceed","getAllValues","idxRemediation","r","getRequiredValues","required","cur","titleCase","toUpperCase","getAuthenticatorFromRemediation","Remediator","authenticators","authenticator","needed","hasData","allValues","inputs","getInputs","getAuthenticator","inputFromRemediation","input","aliases","form","field","authenticatorKey","relatesTo","VerifyAuthenticator","password","verificationCode","passcode","challengeType","EnrollAuthenticator","ChallengeAuthenticator","ResetAuthenticator","EnrollProfile","userProfileFromValues","userProfile","userProfileFromRemediation","profileAttributes","attributeNames","attributeValues","attributeName","errorRemediation","errors","Identify","OKTA_PASSWORD","identifier","ReEnrollAuthenticator","newPassword","RedirectIdp","findMatchedOption","option","SelectAuthenticator","selectedAuthenticator","hasSelectedAuthenticatorInList","authenticatorFromRemediation","matchedOption","common","label","remediationValue","selectedOption","id","SelectAuthenticatorAuthenticate","SelectAuthenticatorEnroll","SelectEnrollProfile","AuthenticatorData","mapAuthenticatorFromValues","getMethodTypes","methodType","AuthenticatorVerificationData","getAuthenticatorFromValues","authenticatorFromValues","enrollmentId","AuthenticatorEnrollmentData","phoneNumber","Skip","skip","getEnabledFeatures","PASSWORD_RECOVERY","REGISTRATION","SOCIAL_IDP","getAvailableSteps","remediations","remediatorMap","remediatorClass","remediationName","PENDING","shouldClearTransaction","setFlow","metaFromResp","interactResponse","enabledFeatures","availableSteps","stateHandle","idxResponseFromResp","nextStepFromResp","messagesFromResp","saveIdxResponse","TERMINAL","CANCELED","isFinished","SUCCESS","FAILURE","_idxResponse","AuthenticationFlow","FlowMonitor","previousRemediator","remediatorName","AuthenticationFlowMonitor","prevRemediatorName","PasswordRecoveryFlow","PasswordRecoveryFlowMonitor","RegistrationFlow","RegistrationFlowMonitor","getFlowSpecification","oktaAuth","authenticate","flowSpec","canProceed","startTransaction","register","recoverPassword","handleInteractionCodeRedirect","savedState","URL","setGlobalRequestInterceptor","client","interceptors","request","createGlobalRequestInterceptor","requestConfig","OktaUserAgent","environments","env","maybeAddNodeEnvironment","process","versions","node","Emitter","OktaAuth","resume","PKCE","handleLogin","_tokenQueue","revoke","syncMethods","history","introspectV2","http","authStateManager","signInWithCredentials","_postToTransaction","sendFingerprint","originalUri","additionalParams","setOriginalUri","accessTokenKey","refreshTokenKey","idTokenHint","logoutUri","defaultUri","currentUri","revokeAccessToken","revokeRefreshToken","getSignOutRedirectUrl","reload","hasExpired","getOriginalUriStorage","getOriginalUri","oAuthResponse","storeTokensFromRedirect","removeOriginalUri","hasResponseType","constants"],"mappings":"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"}